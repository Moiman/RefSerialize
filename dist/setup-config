Saved package config for RefSerialize-0.3.1.3 written by Cabal-1.18.1.3 using ghc-7.8
LocalBuildInfo {configFlags = ConfigFlags {configPrograms = [], configProgramPaths = [], configProgramArgs = [], configProgramPathExtra = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin"], configHcFlavor = Flag GHC, configHcPath = NoFlag, configHcPkg = NoFlag, configVanillaLib = Flag True, configProfLib = Flag False, configSharedLib = NoFlag, configDynExe = Flag False, configProfExe = Flag False, configConfigureArgs = [], configOptimization = Flag NormalOptimisation, configProgPrefix = Flag "", configProgSuffix = Flag "", configInstallDirs = InstallDirs {prefix = Flag "C:\\Users\\magocoal\\AppData\\Roaming\\cabal", bindir = Flag "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin", libdir = Flag "C:\\Users\\magocoal\\AppData\\Roaming\\cabal", libsubdir = Flag "i386-windows-ghc-7.8.2\\RefSerialize-0.3.1.3", dynlibdir = NoFlag, libexecdir = Flag "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\RefSerialize-0.3.1.3", progdir = NoFlag, includedir = NoFlag, datadir = Flag "C:\\Users\\magocoal\\AppData\\Roaming\\cabal", datasubdir = Flag "i386-windows-ghc-7.8.2\\RefSerialize-0.3.1.3", docdir = Flag "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\RefSerialize-0.3.1.3", mandir = NoFlag, htmldir = Flag "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\RefSerialize-0.3.1.3\\html", haddockdir = Flag "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\RefSerialize-0.3.1.3\\html", sysconfdir = Flag "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\etc"}, configScratchDir = NoFlag, configExtraLibDirs = [], configExtraIncludeDirs = [], configDistPref = Flag "dist", configVerbosity = Flag Normal, configUserInstall = Flag True, configPackageDBs = [], configGHCiLib = Flag True, configSplitObjs = Flag False, configStripExes = Flag True, configConstraints = [Dependency (PackageName "stringsearch") (ThisVersion (Version {versionBranch = [0,3,6,5], versionTags = []})),Dependency (PackageName "hashtables") (ThisVersion (Version {versionBranch = [1,1,2,1], versionTags = []})),Dependency (PackageName "containers") (ThisVersion (Version {versionBranch = [0,5,5,1], versionTags = []})),Dependency (PackageName "bytestring") (ThisVersion (Version {versionBranch = [0,10,4,0], versionTags = []})),Dependency (PackageName "binary") (ThisVersion (Version {versionBranch = [0,7,1,0], versionTags = []})),Dependency (PackageName "base") (ThisVersion (Version {versionBranch = [4,7,0,0], versionTags = []}))], configConfigurationsFlags = [], configTests = Flag False, configBenchmarks = Flag False, configLibCoverage = Flag False}, extraConfigArgs = [], installDirTemplates = InstallDirs {prefix = "C:\\Users\\magocoal\\AppData\\Roaming\\cabal", bindir = "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin", libdir = "C:\\Users\\magocoal\\AppData\\Roaming\\cabal", libsubdir = "i386-windows-ghc-7.8.2\\RefSerialize-0.3.1.3", dynlibdir = "$libdir", libexecdir = "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\RefSerialize-0.3.1.3", progdir = "$libdir\\hugs\\programs", includedir = "$libdir\\$libsubdir\\include", datadir = "C:\\Users\\magocoal\\AppData\\Roaming\\cabal", datasubdir = "i386-windows-ghc-7.8.2\\RefSerialize-0.3.1.3", docdir = "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\RefSerialize-0.3.1.3", mandir = "$datadir\\man", htmldir = "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\RefSerialize-0.3.1.3\\html", haddockdir = "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\RefSerialize-0.3.1.3\\html", sysconfdir = "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\etc"}, compiler = Compiler {compilerId = CompilerId GHC (Version {versionBranch = [7,8,2], versionTags = []}), compilerLanguages = [(Haskell98,"-XHaskell98"),(Haskell2010,"-XHaskell2010")], compilerExtensions = [(UnknownExtension "Haskell98","-XHaskell98"),(UnknownExtension "Haskell2010","-XHaskell2010"),(EnableExtension Unsafe,"-XUnsafe"),(EnableExtension Trustworthy,"-XTrustworthy"),(EnableExtension Safe,"-XSafe"),(EnableExtension CPP,"-XCPP"),(DisableExtension CPP,"-XNoCPP"),(EnableExtension PostfixOperators,"-XPostfixOperators"),(DisableExtension PostfixOperators,"-XNoPostfixOperators"),(EnableExtension TupleSections,"-XTupleSections"),(DisableExtension TupleSections,"-XNoTupleSections"),(EnableExtension PatternGuards,"-XPatternGuards"),(DisableExtension PatternGuards,"-XNoPatternGuards"),(EnableExtension UnicodeSyntax,"-XUnicodeSyntax"),(DisableExtension UnicodeSyntax,"-XNoUnicodeSyntax"),(EnableExtension MagicHash,"-XMagicHash"),(DisableExtension MagicHash,"-XNoMagicHash"),(EnableExtension ExistentialQuantification,"-XExistentialQuantification"),(DisableExtension ExistentialQuantification,"-XNoExistentialQuantification"),(EnableExtension KindSignatures,"-XKindSignatures"),(DisableExtension KindSignatures,"-XNoKindSignatures"),(EnableExtension RoleAnnotations,"-XRoleAnnotations"),(DisableExtension RoleAnnotations,"-XNoRoleAnnotations"),(EnableExtension EmptyDataDecls,"-XEmptyDataDecls"),(DisableExtension EmptyDataDecls,"-XNoEmptyDataDecls"),(EnableExtension ParallelListComp,"-XParallelListComp"),(DisableExtension ParallelListComp,"-XNoParallelListComp"),(EnableExtension TransformListComp,"-XTransformListComp"),(DisableExtension TransformListComp,"-XNoTransformListComp"),(EnableExtension MonadComprehensions,"-XMonadComprehensions"),(DisableExtension MonadComprehensions,"-XNoMonadComprehensions"),(EnableExtension ForeignFunctionInterface,"-XForeignFunctionInterface"),(DisableExtension ForeignFunctionInterface,"-XNoForeignFunctionInterface"),(EnableExtension UnliftedFFITypes,"-XUnliftedFFITypes"),(DisableExtension UnliftedFFITypes,"-XNoUnliftedFFITypes"),(EnableExtension InterruptibleFFI,"-XInterruptibleFFI"),(DisableExtension InterruptibleFFI,"-XNoInterruptibleFFI"),(EnableExtension CApiFFI,"-XCApiFFI"),(DisableExtension CApiFFI,"-XNoCApiFFI"),(EnableExtension GHCForeignImportPrim,"-XGHCForeignImportPrim"),(DisableExtension GHCForeignImportPrim,"-XNoGHCForeignImportPrim"),(UnknownExtension "JavaScriptFFI","-XJavaScriptFFI"),(UnknownExtension "NoJavaScriptFFI","-XNoJavaScriptFFI"),(EnableExtension LiberalTypeSynonyms,"-XLiberalTypeSynonyms"),(DisableExtension LiberalTypeSynonyms,"-XNoLiberalTypeSynonyms"),(EnableExtension PolymorphicComponents,"-XPolymorphicComponents"),(DisableExtension PolymorphicComponents,"-XNoPolymorphicComponents"),(EnableExtension Rank2Types,"-XRank2Types"),(DisableExtension Rank2Types,"-XNoRank2Types"),(EnableExtension RankNTypes,"-XRankNTypes"),(DisableExtension RankNTypes,"-XNoRankNTypes"),(EnableExtension ImpredicativeTypes,"-XImpredicativeTypes"),(DisableExtension ImpredicativeTypes,"-XNoImpredicativeTypes"),(EnableExtension TypeOperators,"-XTypeOperators"),(DisableExtension TypeOperators,"-XNoTypeOperators"),(EnableExtension ExplicitNamespaces,"-XExplicitNamespaces"),(DisableExtension ExplicitNamespaces,"-XNoExplicitNamespaces"),(EnableExtension RecursiveDo,"-XRecursiveDo"),(DisableExtension RecursiveDo,"-XNoRecursiveDo"),(EnableExtension DoRec,"-XDoRec"),(DisableExtension DoRec,"-XNoDoRec"),(EnableExtension Arrows,"-XArrows"),(DisableExtension Arrows,"-XNoArrows"),(EnableExtension ParallelArrays,"-XParallelArrays"),(DisableExtension ParallelArrays,"-XNoParallelArrays"),(EnableExtension TemplateHaskell,"-XTemplateHaskell"),(DisableExtension TemplateHaskell,"-XNoTemplateHaskell"),(EnableExtension QuasiQuotes,"-XQuasiQuotes"),(DisableExtension QuasiQuotes,"-XNoQuasiQuotes"),(EnableExtension ImplicitPrelude,"-XImplicitPrelude"),(DisableExtension ImplicitPrelude,"-XNoImplicitPrelude"),(EnableExtension RecordWildCards,"-XRecordWildCards"),(DisableExtension RecordWildCards,"-XNoRecordWildCards"),(EnableExtension NamedFieldPuns,"-XNamedFieldPuns"),(DisableExtension NamedFieldPuns,"-XNoNamedFieldPuns"),(EnableExtension RecordPuns,"-XRecordPuns"),(DisableExtension RecordPuns,"-XNoRecordPuns"),(EnableExtension DisambiguateRecordFields,"-XDisambiguateRecordFields"),(DisableExtension DisambiguateRecordFields,"-XNoDisambiguateRecordFields"),(EnableExtension OverloadedStrings,"-XOverloadedStrings"),(DisableExtension OverloadedStrings,"-XNoOverloadedStrings"),(EnableExtension NumDecimals,"-XNumDecimals"),(DisableExtension NumDecimals,"-XNoNumDecimals"),(EnableExtension OverloadedLists,"-XOverloadedLists"),(DisableExtension OverloadedLists,"-XNoOverloadedLists"),(EnableExtension GADTs,"-XGADTs"),(DisableExtension GADTs,"-XNoGADTs"),(EnableExtension GADTSyntax,"-XGADTSyntax"),(DisableExtension GADTSyntax,"-XNoGADTSyntax"),(EnableExtension ViewPatterns,"-XViewPatterns"),(DisableExtension ViewPatterns,"-XNoViewPatterns"),(EnableExtension TypeFamilies,"-XTypeFamilies"),(DisableExtension TypeFamilies,"-XNoTypeFamilies"),(EnableExtension BangPatterns,"-XBangPatterns"),(DisableExtension BangPatterns,"-XNoBangPatterns"),(EnableExtension MonomorphismRestriction,"-XMonomorphismRestriction"),(DisableExtension MonomorphismRestriction,"-XNoMonomorphismRestriction"),(EnableExtension NPlusKPatterns,"-XNPlusKPatterns"),(DisableExtension NPlusKPatterns,"-XNoNPlusKPatterns"),(EnableExtension DoAndIfThenElse,"-XDoAndIfThenElse"),(DisableExtension DoAndIfThenElse,"-XNoDoAndIfThenElse"),(EnableExtension RebindableSyntax,"-XRebindableSyntax"),(DisableExtension RebindableSyntax,"-XNoRebindableSyntax"),(EnableExtension ConstraintKinds,"-XConstraintKinds"),(DisableExtension ConstraintKinds,"-XNoConstraintKinds"),(EnableExtension PolyKinds,"-XPolyKinds"),(DisableExtension PolyKinds,"-XNoPolyKinds"),(EnableExtension DataKinds,"-XDataKinds"),(DisableExtension DataKinds,"-XNoDataKinds"),(EnableExtension InstanceSigs,"-XInstanceSigs"),(DisableExtension InstanceSigs,"-XNoInstanceSigs"),(EnableExtension MonoPatBinds,"-XMonoPatBinds"),(DisableExtension MonoPatBinds,"-XNoMonoPatBinds"),(EnableExtension ExplicitForAll,"-XExplicitForAll"),(DisableExtension ExplicitForAll,"-XNoExplicitForAll"),(UnknownExtension "AlternativeLayoutRule","-XAlternativeLayoutRule"),(UnknownExtension "NoAlternativeLayoutRule","-XNoAlternativeLayoutRule"),(UnknownExtension "AlternativeLayoutRuleTransitional","-XAlternativeLayoutRuleTransitional"),(UnknownExtension "NoAlternativeLayoutRuleTransitional","-XNoAlternativeLayoutRuleTransitional"),(EnableExtension DatatypeContexts,"-XDatatypeContexts"),(DisableExtension DatatypeContexts,"-XNoDatatypeContexts"),(EnableExtension NondecreasingIndentation,"-XNondecreasingIndentation"),(DisableExtension NondecreasingIndentation,"-XNoNondecreasingIndentation"),(UnknownExtension "RelaxedLayout","-XRelaxedLayout"),(UnknownExtension "NoRelaxedLayout","-XNoRelaxedLayout"),(EnableExtension TraditionalRecordSyntax,"-XTraditionalRecordSyntax"),(DisableExtension TraditionalRecordSyntax,"-XNoTraditionalRecordSyntax"),(EnableExtension LambdaCase,"-XLambdaCase"),(DisableExtension LambdaCase,"-XNoLambdaCase"),(EnableExtension MultiWayIf,"-XMultiWayIf"),(DisableExtension MultiWayIf,"-XNoMultiWayIf"),(EnableExtension MonoLocalBinds,"-XMonoLocalBinds"),(DisableExtension MonoLocalBinds,"-XNoMonoLocalBinds"),(EnableExtension RelaxedPolyRec,"-XRelaxedPolyRec"),(DisableExtension RelaxedPolyRec,"-XNoRelaxedPolyRec"),(EnableExtension ExtendedDefaultRules,"-XExtendedDefaultRules"),(DisableExtension ExtendedDefaultRules,"-XNoExtendedDefaultRules"),(EnableExtension ImplicitParams,"-XImplicitParams"),(DisableExtension ImplicitParams,"-XNoImplicitParams"),(EnableExtension ScopedTypeVariables,"-XScopedTypeVariables"),(DisableExtension ScopedTypeVariables,"-XNoScopedTypeVariables"),(EnableExtension AllowAmbiguousTypes,"-XAllowAmbiguousTypes"),(DisableExtension AllowAmbiguousTypes,"-XNoAllowAmbiguousTypes"),(EnableExtension PatternSignatures,"-XPatternSignatures"),(DisableExtension PatternSignatures,"-XNoPatternSignatures"),(EnableExtension UnboxedTuples,"-XUnboxedTuples"),(DisableExtension UnboxedTuples,"-XNoUnboxedTuples"),(EnableExtension StandaloneDeriving,"-XStandaloneDeriving"),(DisableExtension StandaloneDeriving,"-XNoStandaloneDeriving"),(EnableExtension DeriveDataTypeable,"-XDeriveDataTypeable"),(DisableExtension DeriveDataTypeable,"-XNoDeriveDataTypeable"),(EnableExtension AutoDeriveTypeable,"-XAutoDeriveTypeable"),(DisableExtension AutoDeriveTypeable,"-XNoAutoDeriveTypeable"),(EnableExtension DeriveFunctor,"-XDeriveFunctor"),(DisableExtension DeriveFunctor,"-XNoDeriveFunctor"),(EnableExtension DeriveTraversable,"-XDeriveTraversable"),(DisableExtension DeriveTraversable,"-XNoDeriveTraversable"),(EnableExtension DeriveFoldable,"-XDeriveFoldable"),(DisableExtension DeriveFoldable,"-XNoDeriveFoldable"),(EnableExtension DeriveGeneric,"-XDeriveGeneric"),(DisableExtension DeriveGeneric,"-XNoDeriveGeneric"),(EnableExtension DefaultSignatures,"-XDefaultSignatures"),(DisableExtension DefaultSignatures,"-XNoDefaultSignatures"),(EnableExtension TypeSynonymInstances,"-XTypeSynonymInstances"),(DisableExtension TypeSynonymInstances,"-XNoTypeSynonymInstances"),(EnableExtension FlexibleContexts,"-XFlexibleContexts"),(DisableExtension FlexibleContexts,"-XNoFlexibleContexts"),(EnableExtension FlexibleInstances,"-XFlexibleInstances"),(DisableExtension FlexibleInstances,"-XNoFlexibleInstances"),(EnableExtension ConstrainedClassMethods,"-XConstrainedClassMethods"),(DisableExtension ConstrainedClassMethods,"-XNoConstrainedClassMethods"),(EnableExtension MultiParamTypeClasses,"-XMultiParamTypeClasses"),(DisableExtension MultiParamTypeClasses,"-XNoMultiParamTypeClasses"),(EnableExtension NullaryTypeClasses,"-XNullaryTypeClasses"),(DisableExtension NullaryTypeClasses,"-XNoNullaryTypeClasses"),(EnableExtension FunctionalDependencies,"-XFunctionalDependencies"),(DisableExtension FunctionalDependencies,"-XNoFunctionalDependencies"),(EnableExtension GeneralizedNewtypeDeriving,"-XGeneralizedNewtypeDeriving"),(DisableExtension GeneralizedNewtypeDeriving,"-XNoGeneralizedNewtypeDeriving"),(EnableExtension OverlappingInstances,"-XOverlappingInstances"),(DisableExtension OverlappingInstances,"-XNoOverlappingInstances"),(EnableExtension UndecidableInstances,"-XUndecidableInstances"),(DisableExtension UndecidableInstances,"-XNoUndecidableInstances"),(EnableExtension IncoherentInstances,"-XIncoherentInstances"),(DisableExtension IncoherentInstances,"-XNoIncoherentInstances"),(EnableExtension PackageImports,"-XPackageImports"),(DisableExtension PackageImports,"-XNoPackageImports"),(EnableExtension NegativeLiterals,"-XNegativeLiterals"),(DisableExtension NegativeLiterals,"-XNoNegativeLiterals"),(EnableExtension EmptyCase,"-XEmptyCase"),(DisableExtension EmptyCase,"-XNoEmptyCase"),(UnknownExtension "PatternSynonyms","-XPatternSynonyms"),(UnknownExtension "NoPatternSynonyms","-XNoPatternSynonyms")]}, hostPlatform = Platform I386 Windows, buildDir = "dist\\build", scratchDir = "dist\\scratch", componentsConfigs = [(CLibName,LibComponentLocalBuildInfo {componentPackageDeps = [(InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,7,0,0], versionTags = []}}),(InstalledPackageId "binary-0.7.1.0-5abd5eca1ff239320cd54fc3e6b053c2",PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,7,1,0], versionTags = []}}),(InstalledPackageId "bytestring-0.10.4.0-ed36a2f9ab43ef97de2be397733b6499",PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,10,4,0], versionTags = []}}),(InstalledPackageId "containers-0.5.5.1-c6850b8cbf84011c2c740c6f932c0fcc",PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,5,5,1], versionTags = []}}),(InstalledPackageId "hashtables-1.1.2.1-40a91ebc1782a812c1bdf347e174865f",PackageIdentifier {pkgName = PackageName "hashtables", pkgVersion = Version {versionBranch = [1,1,2,1], versionTags = []}}),(InstalledPackageId "stringsearch-0.3.6.5-8efc02498c84cc6220a478d01a1746a0",PackageIdentifier {pkgName = PackageName "stringsearch", pkgVersion = Version {versionBranch = [0,3,6,5], versionTags = []}})], componentLibraries = [LibraryName "HSRefSerialize-0.3.1.3"]},[])], installedPkgs = PackageIndex (fromList [(InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a",InstalledPackageInfo {installedPackageId = InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a", sourcePackageId = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,5,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Mutable and immutable arrays", description = "In addition to providing the \"Data.Array\" module\n<http://www.haskell.org/onlinereport/haskell2010/haskellch14.html as specified in the Haskell 2010 Language Report>,\nthis package also defines the classes 'IArray' of\nimmutable arrays and 'MArray' of arrays mutable within appropriate\nmonads, as well as some instances of these classes.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Array"],ModuleName ["Data","Array","Base"],ModuleName ["Data","Array","IArray"],ModuleName ["Data","Array","IO"],ModuleName ["Data","Array","IO","Safe"],ModuleName ["Data","Array","IO","Internals"],ModuleName ["Data","Array","MArray"],ModuleName ["Data","Array","MArray","Safe"],ModuleName ["Data","Array","ST"],ModuleName ["Data","Array","ST","Safe"],ModuleName ["Data","Array","Storable"],ModuleName ["Data","Array","Storable","Safe"],ModuleName ["Data","Array","Storable","Internals"],ModuleName ["Data","Array","Unboxed"],ModuleName ["Data","Array","Unsafe"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\array-0.5.0.0"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\array-0.5.0.0"], hsLibraries = ["HSarray-0.5.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/array-0.5.0.0\\array.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/array-0.5.0.0"]}),(InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageInfo {installedPackageId = InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d", sourcePackageId = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,7,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Basic libraries", description = "This package contains the \"Prelude\" and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "Prelude", exposed = True, exposedModules = [ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Lazy","Safe"],ModuleName ["Control","Monad","ST","Lazy","Unsafe"],ModuleName ["Control","Monad","ST","Safe"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Control","Monad","ST","Unsafe"],ModuleName ["Control","Monad","Zip"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Coerce"],ModuleName ["Data","Complex"],ModuleName ["Data","Data"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","Functor"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","OldTypeable"],ModuleName ["Data","OldTypeable","Internal"],ModuleName ["Data","Ord"],ModuleName ["Data","Proxy"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Type","Bool"],ModuleName ["Data","Type","Coercion"],ModuleName ["Data","Type","Equality"],ModuleName ["Data","Typeable"],ModuleName ["Data","Typeable","Internal"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","Concurrent"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","ForeignPtr","Safe"],ModuleName ["Foreign","ForeignPtr","Unsafe"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Safe"],ModuleName ["Foreign","Marshal","Unsafe"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","Safe"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Char"],ModuleName ["GHC","Conc"],ModuleName ["GHC","Conc","IO"],ModuleName ["GHC","Conc","Signal"],ModuleName ["GHC","Conc","Sync"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Constants"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Fingerprint"],ModuleName ["GHC","Fingerprint","Type"],ModuleName ["GHC","Float"],ModuleName ["GHC","Float","ConversionUtils"],ModuleName ["GHC","Float","RealFracMethods"],ModuleName ["GHC","Foreign"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","GHCi"],ModuleName ["GHC","Generics"],ModuleName ["GHC","IO"],ModuleName ["GHC","IO","Buffer"],ModuleName ["GHC","IO","BufferedIO"],ModuleName ["GHC","IO","Device"],ModuleName ["GHC","IO","Encoding"],ModuleName ["GHC","IO","Encoding","CodePage"],ModuleName ["GHC","IO","Encoding","Failure"],ModuleName ["GHC","IO","Encoding","Iconv"],ModuleName ["GHC","IO","Encoding","Latin1"],ModuleName ["GHC","IO","Encoding","Types"],ModuleName ["GHC","IO","Encoding","UTF16"],ModuleName ["GHC","IO","Encoding","UTF32"],ModuleName ["GHC","IO","Encoding","UTF8"],ModuleName ["GHC","IO","Exception"],ModuleName ["GHC","IO","FD"],ModuleName ["GHC","IO","Handle"],ModuleName ["GHC","IO","Handle","FD"],ModuleName ["GHC","IO","Handle","Internals"],ModuleName ["GHC","IO","Handle","Text"],ModuleName ["GHC","IO","Handle","Types"],ModuleName ["GHC","IO","IOMode"],ModuleName ["GHC","IOArray"],ModuleName ["GHC","IORef"],ModuleName ["GHC","IP"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","MVar"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Profiling"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","STRef"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Stack"],ModuleName ["GHC","Stats"],ModuleName ["GHC","Storable"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","TypeLits"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","CPUTime"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["System","Timeout"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"],ModuleName ["GHC","IO","Encoding","CodePage","API"],ModuleName ["GHC","IO","Encoding","CodePage","Table"],ModuleName ["GHC","Conc","Windows"],ModuleName ["GHC","Windows"]], hiddenModules = [ModuleName ["Control","Monad","ST","Imp"],ModuleName ["Control","Monad","ST","Lazy","Imp"],ModuleName ["Foreign","ForeignPtr","Imp"],ModuleName ["System","Environment","ExecutablePath"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\base-4.7.0.0"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\base-4.7.0.0"], hsLibraries = ["HSbase-4.7.0.0"], extraLibraries = ["wsock32","user32","shell32"], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\base-4.7.0.0\\include"], includes = ["HsBase.h"], depends = [InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageId "integer-gmp-0.5.1.0-5018013522867190d73a563b47d0b8a7",InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/base-4.7.0.0\\base.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/base-4.7.0.0"]}),(InstalledPackageId "binary-0.7.1.0-5abd5eca1ff239320cd54fc3e6b053c2",InstalledPackageInfo {installedPackageId = InstalledPackageId "binary-0.7.1.0-5abd5eca1ff239320cd54fc3e6b053c2", sourcePackageId = PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,7,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Lennart Kolmodin, Don Stewart <dons00@gmail.com>", author = "Lennart Kolmodin <kolmodin@gmail.com>", stability = "provisional", homepage = "https://github.com/kolmodin/binary", pkgUrl = "", synopsis = "Binary serialisation for Haskell values using lazy ByteStrings", description = "Efficient, pure binary serialisation using lazy ByteStrings.\nHaskell values may be encoded to and from binary formats,\nwritten to disk as binary, or sent over the network.\nThe format used can be automatically generated, or\nyou can choose to implement a custom format if needed.\nSerialisation speeds of over 1 G\\/sec have been observed,\nso this library should be suitable for high performance\nscenarios.", category = "Data, Parsing", exposed = True, exposedModules = [ModuleName ["Data","Binary"],ModuleName ["Data","Binary","Put"],ModuleName ["Data","Binary","Get"],ModuleName ["Data","Binary","Get","Internal"],ModuleName ["Data","Binary","Builder"],ModuleName ["Data","Binary","Builder","Internal"]], hiddenModules = [ModuleName ["Data","Binary","Builder","Base"],ModuleName ["Data","Binary","Class"],ModuleName ["Data","Binary","Generic"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\binary-0.7.1.0"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\binary-0.7.1.0"], hsLibraries = ["HSbinary-0.7.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a",InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "bytestring-0.10.4.0-ed36a2f9ab43ef97de2be397733b6499",InstalledPackageId "containers-0.5.5.1-c6850b8cbf84011c2c740c6f932c0fcc"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/binary-0.7.1.0\\binary.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/binary-0.7.1.0"]}),(InstalledPackageId "builtin_rts",InstalledPackageInfo {installedPackageId = InstalledPackageId "builtin_rts", sourcePackageId = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], trusted = False, importDirs = [], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/rts-1.0"], hsLibraries = ["HSrts","Cffi-6"], extraLibraries = ["m","wsock32","gdi32","winmm"], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-Wl,-u,_ghczmprim_GHCziTypes_Izh_static_info","-Wl,-u,_ghczmprim_GHCziTypes_Czh_static_info","-Wl,-u,_ghczmprim_GHCziTypes_Fzh_static_info","-Wl,-u,_ghczmprim_GHCziTypes_Dzh_static_info","-Wl,-u,_base_GHCziPtr_Ptr_static_info","-Wl,-u,_ghczmprim_GHCziTypes_Wzh_static_info","-Wl,-u,_base_GHCziInt_I8zh_static_info","-Wl,-u,_base_GHCziInt_I16zh_static_info","-Wl,-u,_base_GHCziInt_I32zh_static_info","-Wl,-u,_base_GHCziInt_I64zh_static_info","-Wl,-u,_base_GHCziWord_W8zh_static_info","-Wl,-u,_base_GHCziWord_W16zh_static_info","-Wl,-u,_base_GHCziWord_W32zh_static_info","-Wl,-u,_base_GHCziWord_W64zh_static_info","-Wl,-u,_base_GHCziStable_StablePtr_static_info","-Wl,-u,_ghczmprim_GHCziTypes_Izh_con_info","-Wl,-u,_ghczmprim_GHCziTypes_Czh_con_info","-Wl,-u,_ghczmprim_GHCziTypes_Fzh_con_info","-Wl,-u,_ghczmprim_GHCziTypes_Dzh_con_info","-Wl,-u,_base_GHCziPtr_Ptr_con_info","-Wl,-u,_base_GHCziPtr_FunPtr_con_info","-Wl,-u,_base_GHCziStable_StablePtr_con_info","-Wl,-u,_ghczmprim_GHCziTypes_False_closure","-Wl,-u,_ghczmprim_GHCziTypes_True_closure","-Wl,-u,_base_GHCziPack_unpackCString_closure","-Wl,-u,_base_GHCziIOziException_stackOverflow_closure","-Wl,-u,_base_GHCziIOziException_heapOverflow_closure","-Wl,-u,_base_ControlziExceptionziBase_nonTermination_closure","-Wl,-u,_base_GHCziIOziException_blockedIndefinitelyOnMVar_closure","-Wl,-u,_base_GHCziIOziException_blockedIndefinitelyOnSTM_closure","-Wl,-u,_base_ControlziExceptionziBase_nestedAtomically_closure","-Wl,-u,_base_GHCziWeak_runFinalizzerBatch_closure","-Wl,-u,_base_GHCziTopHandler_flushStdHandles_closure","-Wl,-u,_base_GHCziTopHandler_runIO_closure","-Wl,-u,_base_GHCziTopHandler_runNonIO_closure","-Wl,-u,_base_GHCziConcziIO_ensureIOManagerIsRunning_closure","-Wl,-u,_base_GHCziConcziIO_ioManagerCapabilitiesChanged_closure","-Wl,-u,_base_GHCziConcziSync_runSparks_closure","-Wl,-u,_base_GHCziConcziSignal_runHandlers_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}),(InstalledPackageId "bytestring-0.10.4.0-ed36a2f9ab43ef97de2be397733b6499",InstalledPackageInfo {installedPackageId = InstalledPackageId "bytestring-0.10.4.0-ed36a2f9ab43ef97de2be397733b6499", sourcePackageId = PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,10,4,0], versionTags = []}}, license = BSD3, copyright = "Copyright (c) Don Stewart          2005-2009,\n(c) Duncan Coutts        2006-2013,\n(c) David Roundy         2003-2005,\n(c) Jasper Van der Jeugt 2010,\n(c) Simon Meier          2010-2013.", maintainer = "Don Stewart <dons00@gmail.com>,\nDuncan Coutts <duncan@community.haskell.org>", author = "Don Stewart,\nDuncan Coutts", stability = "", homepage = "https://github.com/haskell/bytestring", pkgUrl = "", synopsis = "Fast, compact, strict and lazy byte strings with a list interface", description = "An efficient compact, immutable byte string type (both strict and lazy)\nsuitable for binary or 8-bit character data.\n\nThe 'ByteString' type represents sequences of bytes or 8-bit characters.\nIt is suitable for high performance use, both in terms of large data\nquantities, or high speed requirements. The 'ByteString' functions follow\nthe same style as Haskell\\'s ordinary lists, so it is easy to convert code\nfrom using 'String' to 'ByteString'.\n\nTwo 'ByteString' variants are provided:\n\n* Strict 'ByteString's keep the string as a single large array. This\nmakes them convenient for passing data between C and Haskell.\n\n* Lazy 'ByteString's use a lazy list of strict chunks which makes it\nsuitable for I\\/O streaming tasks.\n\nThe @Char8@ modules provide a character-based view of the same\nunderlying 'ByteString' types. This makes it convenient to handle mixed\nbinary and 8-bit character content (which is common in many file formats\nand network protocols).\n\nThe 'Builder' module provides an efficient way to build up 'ByteString's\nin an ad-hoc way by repeated concatenation. This is ideal for fast\nserialisation or pretty printing.\n\nThere is also a 'ShortByteString' type which has a lower memory overhead\nand can can be converted to or from a 'ByteString', but supports very few\nother operations. It is suitable for keeping many short strings in memory.\n\n'ByteString's are not designed for Unicode. For Unicode strings you should\nuse the 'Text' type from the @text@ package.\n\nThese modules are intended to be imported qualified, to avoid name clashes\nwith \"Prelude\" functions, e.g.\n\n> import qualified Data.ByteString as BS", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","ByteString"],ModuleName ["Data","ByteString","Char8"],ModuleName ["Data","ByteString","Unsafe"],ModuleName ["Data","ByteString","Internal"],ModuleName ["Data","ByteString","Lazy"],ModuleName ["Data","ByteString","Lazy","Char8"],ModuleName ["Data","ByteString","Lazy","Internal"],ModuleName ["Data","ByteString","Short"],ModuleName ["Data","ByteString","Short","Internal"],ModuleName ["Data","ByteString","Builder"],ModuleName ["Data","ByteString","Builder","Extra"],ModuleName ["Data","ByteString","Builder","Prim"],ModuleName ["Data","ByteString","Builder","Internal"],ModuleName ["Data","ByteString","Builder","Prim","Internal"],ModuleName ["Data","ByteString","Lazy","Builder"],ModuleName ["Data","ByteString","Lazy","Builder","Extras"],ModuleName ["Data","ByteString","Lazy","Builder","ASCII"]], hiddenModules = [ModuleName ["Data","ByteString","Builder","ASCII"],ModuleName ["Data","ByteString","Builder","Prim","Binary"],ModuleName ["Data","ByteString","Builder","Prim","ASCII"],ModuleName ["Data","ByteString","Builder","Prim","Internal","Floating"],ModuleName ["Data","ByteString","Builder","Prim","Internal","UncheckedShifts"],ModuleName ["Data","ByteString","Builder","Prim","Internal","Base16"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\bytestring-0.10.4.0"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\bytestring-0.10.4.0"], hsLibraries = ["HSbytestring-0.10.4.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\bytestring-0.10.4.0\\include"], includes = ["fpstring.h"], depends = [InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "deepseq-1.3.0.2-e89e7ec69118ab770788c672bee3f4ca",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageId "integer-gmp-0.5.1.0-5018013522867190d73a563b47d0b8a7"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/bytestring-0.10.4.0\\bytestring.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/bytestring-0.10.4.0"]}),(InstalledPackageId "containers-0.5.5.1-c6850b8cbf84011c2c740c6f932c0fcc",InstalledPackageInfo {installedPackageId = InstalledPackageId "containers-0.5.5.1-c6850b8cbf84011c2c740c6f932c0fcc", sourcePackageId = PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,5,5,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "fox@ucw.cz", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Assorted concrete container types", description = "This package contains efficient general-purpose implementations\nof various basic immutable container types.  The declared cost of\neach operation is either worst-case or amortized, but remains\nvalid even if structures are shared.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","IntMap"],ModuleName ["Data","IntMap","Lazy"],ModuleName ["Data","IntMap","Strict"],ModuleName ["Data","IntSet"],ModuleName ["Data","Map"],ModuleName ["Data","Map","Lazy"],ModuleName ["Data","Map","Strict"],ModuleName ["Data","Set"],ModuleName ["Data","Graph"],ModuleName ["Data","Sequence"],ModuleName ["Data","Tree"]], hiddenModules = [ModuleName ["Data","BitUtil"],ModuleName ["Data","IntMap","Base"],ModuleName ["Data","IntSet","Base"],ModuleName ["Data","Map","Base"],ModuleName ["Data","Set","Base"],ModuleName ["Data","StrictPair"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\containers-0.5.5.1"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\containers-0.5.5.1"], hsLibraries = ["HScontainers-0.5.5.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a",InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "deepseq-1.3.0.2-e89e7ec69118ab770788c672bee3f4ca",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/containers-0.5.5.1\\containers.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/containers-0.5.5.1"]}),(InstalledPackageId "deepseq-1.3.0.2-e89e7ec69118ab770788c672bee3f4ca",InstalledPackageInfo {installedPackageId = InstalledPackageId "deepseq-1.3.0.2-e89e7ec69118ab770788c672bee3f4ca", sourcePackageId = PackageIdentifier {pkgName = PackageName "deepseq", pkgVersion = Version {versionBranch = [1,3,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Deep evaluation of data structures", description = "This package provides methods for fully evaluating data structures\n(\\\"deep evaluation\\\"). Deep evaluation is often used for adding\nstrictness to a program, e.g. in order to force pending exceptions,\nremove space leaks, or force lazy I/O to happen. It is also useful\nin parallel programs, to ensure pending work does not migrate to the\nwrong thread.\n\nThe primary use of this package is via the 'deepseq' function, a\n\\\"deep\\\" version of 'seq'. It is implemented on top of an 'NFData'\ntypeclass (\\\"Normal Form Data\\\", data structures with no unevaluated\ncomponents) which defines strategies for fully evaluating different\ndata types.\n\nIf you want to automatically derive 'NFData' instances via the\n\"GHC.Generics\" facility, there is a companion package\n<http://hackage.haskell.org/package/deepseq-generics deepseq-generics>\nwhich builds on top of this package.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","DeepSeq"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\deepseq-1.3.0.2"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\deepseq-1.3.0.2"], hsLibraries = ["HSdeepseq-1.3.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a",InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/deepseq-1.3.0.2\\deepseq.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/deepseq-1.3.0.2"]}),(InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageInfo {installedPackageId = InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789", sourcePackageId = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,3,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "GHC primitives", description = "GHC primitives.", category = "GHC", exposed = True, exposedModules = [ModuleName ["GHC","CString"],ModuleName ["GHC","Classes"],ModuleName ["GHC","Debug"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Magic"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"],ModuleName ["GHC","Prim"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\ghc-prim-0.3.1.0"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\ghc-prim-0.3.1.0"], hsLibraries = ["HSghc-prim-0.3.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/ghc-prim-0.3.1.0\\ghc-prim.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/ghc-prim-0.3.1.0"]}),(InstalledPackageId "hashable-1.2.1.0-6f0032ab00e63521dacef18e86ce57d0",InstalledPackageInfo {installedPackageId = InstalledPackageId "hashable-1.2.1.0-6f0032ab00e63521dacef18e86ce57d0", sourcePackageId = PackageIdentifier {pkgName = PackageName "hashable", pkgVersion = Version {versionBranch = [1,2,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "johan.tibell@gmail.com", author = "Milan Straka <fox@ucw.cz>\nJohan Tibell <johan.tibell@gmail.com>", stability = "Provisional", homepage = "http://github.com/tibbe/hashable", pkgUrl = "", synopsis = "A class for types that can be converted to a hash value", description = "This package defines a class, 'Hashable', for types that\ncan be converted to a hash value.  This class\nexists for the benefit of hashing-based data\nstructures.  The package provides instances for\nbasic types and a way to combine hash values.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Hashable"]], hiddenModules = [ModuleName ["Data","Hashable","Class"],ModuleName ["Data","Hashable","Generic"]], trusted = False, importDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\hashable-1.2.1.0"], libraryDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\hashable-1.2.1.0"], hsLibraries = ["HShashable-1.2.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "bytestring-0.10.4.0-ed36a2f9ab43ef97de2be397733b6499",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageId "integer-gmp-0.5.1.0-5018013522867190d73a563b47d0b8a7",InstalledPackageId "text-1.1.1.1-f903c968a4109110e124c22fe978a809"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\hashable-1.2.1.0\\html\\hashable.haddock"], haddockHTMLs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\hashable-1.2.1.0\\html"]}),(InstalledPackageId "hashtables-1.1.2.1-40a91ebc1782a812c1bdf347e174865f",InstalledPackageInfo {installedPackageId = InstalledPackageId "hashtables-1.1.2.1-40a91ebc1782a812c1bdf347e174865f", sourcePackageId = PackageIdentifier {pkgName = PackageName "hashtables", pkgVersion = Version {versionBranch = [1,1,2,1], versionTags = []}}, license = BSD3, copyright = "(c) 2011-2013, Google, Inc.", maintainer = "greg@gregorycollins.net", author = "Gregory Collins", stability = "", homepage = "http://github.com/gregorycollins/hashtables", pkgUrl = "", synopsis = "Mutable hash tables in the ST monad", description = "This package provides a couple of different implementations of mutable hash\ntables in the ST monad, as well as a typeclass abstracting their common\noperations, and a set of wrappers to use the hash tables in the IO monad.\n\n/QUICK START/: documentation for the hash table operations is provided in the\n\"Data.HashTable.Class\" module, and the IO wrappers (which most users will\nprobably prefer) are located in the \"Data.HashTable.IO\" module.\n\nThis package currently contains three hash table implementations:\n\n1. \"Data.HashTable.ST.Basic\" contains a basic open-addressing hash table\nusing linear probing as the collision strategy. On a pure speed basis it\nshould currently be the fastest available Haskell hash table\nimplementation for lookups, although it has a higher memory overhead\nthan the other tables and can suffer from long delays when the table is\nresized because all of the elements in the table need to be rehashed.\n\n2. \"Data.HashTable.ST.Cuckoo\" contains an implementation of \\\"cuckoo\nhashing\\\" as introduced by Pagh and Rodler in 2001 (see\n<http://en.wikipedia.org/wiki/Cuckoo_hashing>). Cuckoo hashing has\nworst-case /O(1)/ lookups and can reach a high \\\"load factor\\\", in which\nthe table can perform acceptably well even when more than 90% full.\nRandomized testing shows this implementation of cuckoo hashing to be\nslightly faster on insert and slightly slower on lookup than\n\"Data.Hashtable.ST.Basic\", while being more space efficient by about a\nhalf-word per key-value mapping. Cuckoo hashing, like the basic hash\ntable implementation using linear probing, can suffer from long delays\nwhen the table is resized.\n\n3. \"Data.HashTable.ST.Linear\" contains a linear hash table (see\n<http://en.wikipedia.org/wiki/Linear_hashing>), which trades some insert\nand lookup performance for higher space efficiency and much shorter\ndelays when expanding the table. In most cases, benchmarks show this\ntable to be currently slightly faster than @Data.HashTable@ from the\nHaskell base library.\n\nIt is recommended to create a concrete type alias in your code when using this\npackage, i.e.:\n\n> import qualified Data.HashTable.IO as H\n>\n> type HashTable k v = H.BasicHashTable k v\n>\n> foo :: IO (HashTable Int Int)\n> foo = do\n>     ht <- H.new\n>     H.insert ht 1 1\n>     return ht\n\nFirstly, this makes it easy to switch to a different hash table implementation,\nand secondly, using a concrete type rather than leaving your functions abstract\nin the HashTable class should allow GHC to optimize away the typeclass\ndictionaries.\n\nThis package accepts a couple of different cabal flags:\n\n* @unsafe-tricks@, default /ON/. If this flag is enabled, we use some\nunsafe GHC-specific tricks to save indirections (namely @unsafeCoerce#@\nand @reallyUnsafePtrEquality#@. These techniques rely on assumptions\nabout the behaviour of the GHC runtime system and, although they've been\ntested and should be safe under normal conditions, are slightly\ndangerous. Caveat emptor. In particular, these techniques are\nincompatible with HPC code coverage reports.\n\n* @sse41@, default /OFF/. If this flag is enabled, we use some SSE 4.1\ninstructions (see <http://en.wikipedia.org/wiki/SSE4>, first available on\nIntel Core 2 processors) to speed up cache-line searches for cuckoo\nhashing.\n\n* @bounds-checking@, default /OFF/. If this flag is enabled, array accesses\nare bounds-checked.\n\n* @debug@, default /OFF/. If turned on, we'll rudely spew debug output to\nstdout.\n\n* @portable@, default /OFF/. If this flag is enabled, we use only pure\nHaskell code and try not to use unportable GHC extensions. Turning this\nflag on forces @unsafe-tricks@ and @sse41@ /OFF/.\n\nThis package has been tested with GHC 7.0.3, on:\n\n* a MacBook Pro running Snow Leopard with an Intel Core i5 processor,\nrunning GHC 7.0.3 in 64-bit mode.\n\n* an Arch Linux desktop with an AMD Phenom II X4 940 quad-core processor.\n\n* a MacBook Pro running Snow Leopard with an Intel Core 2 Duo processor,\nrunning GHC 6.12.3 in 32-bit mode.\n\nPlease send bug reports to\n<https://github.com/gregorycollins/hashtables/issues>.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","HashTable","Class"],ModuleName ["Data","HashTable","IO"],ModuleName ["Data","HashTable","ST","Basic"],ModuleName ["Data","HashTable","ST","Cuckoo"],ModuleName ["Data","HashTable","ST","Linear"]], hiddenModules = [ModuleName ["Data","HashTable","Internal","Array"],ModuleName ["Data","HashTable","Internal","IntArray"],ModuleName ["Data","HashTable","Internal","CacheLine"],ModuleName ["Data","HashTable","Internal","CheapPseudoRandomBitStream"],ModuleName ["Data","HashTable","Internal","UnsafeTricks"],ModuleName ["Data","HashTable","Internal","Utils"],ModuleName ["Data","HashTable","Internal","Linear","Bucket"]], trusted = False, importDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\hashtables-1.1.2.1"], libraryDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\hashtables-1.1.2.1"], hsLibraries = ["HShashtables-1.1.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageId "hashable-1.2.1.0-6f0032ab00e63521dacef18e86ce57d0",InstalledPackageId "primitive-0.5.2.1-ecbf1d412da255d95737883aa898fe0e",InstalledPackageId "vector-0.10.9.1-f598cc1fa7a77295e73b7ee42470a162"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\hashtables-1.1.2.1\\html\\hashtables.haddock"], haddockHTMLs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\hashtables-1.1.2.1\\html"]}),(InstalledPackageId "integer-gmp-0.5.1.0-5018013522867190d73a563b47d0b8a7",InstalledPackageInfo {installedPackageId = InstalledPackageId "integer-gmp-0.5.1.0-5018013522867190d73a563b47d0b8a7", sourcePackageId = PackageIdentifier {pkgName = PackageName "integer-gmp", pkgVersion = Version {versionBranch = [0,5,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Integer library based on GMP", description = "This package provides the low-level implementation of the standard\n'Integer' type based on the\n<http://gmplib.org/ GNU Multiple Precision Arithmetic Library (GMP)>.\n\nThis package provides access to the internal representation of\n'Integer' as well as primitive operations with no proper error\nhandling, and should only be used directly with the utmost care.\n\nFor more details about the design of @integer-gmp@, see\n<https://ghc.haskell.org/trac/ghc/wiki/Commentary/Libraries/Integer GHC Commentary: Libraries/Integer>.", category = "Numerical", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","GMP","Internals"],ModuleName ["GHC","Integer","GMP","Prim"],ModuleName ["GHC","Integer","Logarithms"],ModuleName ["GHC","Integer","Logarithms","Internals"]], hiddenModules = [ModuleName ["GHC","Integer","Type"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\integer-gmp-0.5.1.0"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\integer-gmp-0.5.1.0"], hsLibraries = ["HSinteger-gmp-0.5.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\integer-gmp-0.5.1.0\\include"], includes = [], depends = [InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/integer-gmp-0.5.1.0\\integer-gmp.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/integer-gmp-0.5.1.0"]}),(InstalledPackageId "primitive-0.5.2.1-ecbf1d412da255d95737883aa898fe0e",InstalledPackageInfo {installedPackageId = InstalledPackageId "primitive-0.5.2.1-ecbf1d412da255d95737883aa898fe0e", sourcePackageId = PackageIdentifier {pkgName = PackageName "primitive", pkgVersion = Version {versionBranch = [0,5,2,1], versionTags = []}}, license = BSD3, copyright = "(c) Roman Leshchinskiy 2009-2012", maintainer = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", author = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", stability = "", homepage = "https://github.com/haskell/primitive", pkgUrl = "", synopsis = "Primitive memory-related operations", description = "This package provides various primitive memory-related operations.", category = "Data", exposed = True, exposedModules = [ModuleName ["Control","Monad","Primitive"],ModuleName ["Data","Primitive"],ModuleName ["Data","Primitive","MachDeps"],ModuleName ["Data","Primitive","Types"],ModuleName ["Data","Primitive","Array"],ModuleName ["Data","Primitive","ByteArray"],ModuleName ["Data","Primitive","Addr"],ModuleName ["Data","Primitive","MutVar"]], hiddenModules = [ModuleName ["Data","Primitive","Internal","Compat"],ModuleName ["Data","Primitive","Internal","Operations"]], trusted = False, importDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\primitive-0.5.2.1"], libraryDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\primitive-0.5.2.1"], hsLibraries = ["HSprimitive-0.5.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\primitive-0.5.2.1\\include"], includes = ["primitive-memops.h"], depends = [InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\primitive-0.5.2.1\\html\\primitive.haddock"], haddockHTMLs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\primitive-0.5.2.1\\html"]}),(InstalledPackageId "stringsearch-0.3.6.5-8efc02498c84cc6220a478d01a1746a0",InstalledPackageInfo {installedPackageId = InstalledPackageId "stringsearch-0.3.6.5-8efc02498c84cc6220a478d01a1746a0", sourcePackageId = PackageIdentifier {pkgName = PackageName "stringsearch", pkgVersion = Version {versionBranch = [0,3,6,5], versionTags = []}}, license = BSD3, copyright = "(c) 2007-2011\nDaniel Fischer, Chris Kuklewicz, Justin Bailey", maintainer = "daniel.is.fischer@googlemail.com", author = "Daniel Fischer, Chris Kuklewicz, Justin Bailey", stability = "", homepage = "https://bitbucket.org/dafis/stringsearch", pkgUrl = "", synopsis = "Fast searching, splitting and replacing of ByteStrings", description = "This package provides several functions to quickly\nsearch for substrings in strict or lazy ByteStrings.\nIt also provides functions for breaking or splitting\non substrings and replacing all occurrences of a\nsubstring (the first in case of overlaps) with another.\nGHC before 6.10 are no longer supported, other compilers\nonly if they support BangPatterns. If you need it to\nwork with other compilers, send a feature request.", category = "Text, Search", exposed = True, exposedModules = [ModuleName ["Data","ByteString","Search"],ModuleName ["Data","ByteString","Search","BoyerMoore"],ModuleName ["Data","ByteString","Search","DFA"],ModuleName ["Data","ByteString","Search","KarpRabin"],ModuleName ["Data","ByteString","Search","KMP"],ModuleName ["Data","ByteString","Search","KnuthMorrisPratt"],ModuleName ["Data","ByteString","Search","Substitution"],ModuleName ["Data","ByteString","Lazy","Search"],ModuleName ["Data","ByteString","Lazy","Search","DFA"],ModuleName ["Data","ByteString","Lazy","Search","KarpRabin"],ModuleName ["Data","ByteString","Lazy","Search","KMP"]], hiddenModules = [ModuleName ["Data","ByteString","Search","Internal","BoyerMoore"],ModuleName ["Data","ByteString","Search","Internal","KnuthMorrisPratt"],ModuleName ["Data","ByteString","Search","Internal","Utils"],ModuleName ["Data","ByteString","Lazy","Search","Internal","BoyerMoore"]], trusted = False, importDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\stringsearch-0.3.6.5"], libraryDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\stringsearch-0.3.6.5"], hsLibraries = ["HSstringsearch-0.3.6.5"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a",InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "bytestring-0.10.4.0-ed36a2f9ab43ef97de2be397733b6499",InstalledPackageId "containers-0.5.5.1-c6850b8cbf84011c2c740c6f932c0fcc"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\stringsearch-0.3.6.5\\html\\stringsearch.haddock"], haddockHTMLs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\stringsearch-0.3.6.5\\html"]}),(InstalledPackageId "text-1.1.1.1-f903c968a4109110e124c22fe978a809",InstalledPackageInfo {installedPackageId = InstalledPackageId "text-1.1.1.1-f903c968a4109110e124c22fe978a809", sourcePackageId = PackageIdentifier {pkgName = PackageName "text", pkgVersion = Version {versionBranch = [1,1,1,1], versionTags = []}}, license = BSD3, copyright = "2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper", maintainer = "Bryan O'Sullivan <bos@serpentine.com>", author = "Bryan O'Sullivan <bos@serpentine.com>", stability = "", homepage = "https://github.com/bos/text", pkgUrl = "", synopsis = "An efficient packed Unicode text type.", description = "\nAn efficient packed, immutable Unicode text type (both strict and\nlazy), with a powerful loop fusion optimization framework.\n\nThe 'Text' type represents Unicode character strings, in a time and\nspace-efficient manner. This package provides text processing\ncapabilities that are optimized for performance critical use, both\nin terms of large data quantities and high speed.\n\nThe 'Text' type provides character-encoding, type-safe case\nconversion via whole-string case conversion functions. It also\nprovides a range of functions for converting 'Text' values to and from\n'ByteStrings', using several standard encodings.\n\nEfficient locale-sensitive support for text IO is also supported.\n\nThese modules are intended to be imported qualified, to avoid name\nclashes with Prelude functions, e.g.\n\n> import qualified Data.Text as T\n\nTo use an extended and very rich family of functions for working\nwith Unicode text (including normalization, regular expressions,\nnon-standard encodings, text breaking, and locales), see\nthe @text-icu@ package:\n<http://hackage.haskell.org/package/text-icu>", category = "Data, Text", exposed = True, exposedModules = [ModuleName ["Data","Text"],ModuleName ["Data","Text","Array"],ModuleName ["Data","Text","Encoding"],ModuleName ["Data","Text","Encoding","Error"],ModuleName ["Data","Text","Foreign"],ModuleName ["Data","Text","IO"],ModuleName ["Data","Text","Internal"],ModuleName ["Data","Text","Internal","Builder"],ModuleName ["Data","Text","Internal","Builder","Functions"],ModuleName ["Data","Text","Internal","Builder","Int","Digits"],ModuleName ["Data","Text","Internal","Builder","RealFloat","Functions"],ModuleName ["Data","Text","Internal","Encoding","Fusion"],ModuleName ["Data","Text","Internal","Encoding","Fusion","Common"],ModuleName ["Data","Text","Internal","Encoding","Utf16"],ModuleName ["Data","Text","Internal","Encoding","Utf32"],ModuleName ["Data","Text","Internal","Encoding","Utf8"],ModuleName ["Data","Text","Internal","Functions"],ModuleName ["Data","Text","Internal","Fusion"],ModuleName ["Data","Text","Internal","Fusion","CaseMapping"],ModuleName ["Data","Text","Internal","Fusion","Common"],ModuleName ["Data","Text","Internal","Fusion","Size"],ModuleName ["Data","Text","Internal","Fusion","Types"],ModuleName ["Data","Text","Internal","IO"],ModuleName ["Data","Text","Internal","Lazy"],ModuleName ["Data","Text","Internal","Lazy","Encoding","Fusion"],ModuleName ["Data","Text","Internal","Lazy","Fusion"],ModuleName ["Data","Text","Internal","Lazy","Search"],ModuleName ["Data","Text","Internal","Private"],ModuleName ["Data","Text","Internal","Read"],ModuleName ["Data","Text","Internal","Search"],ModuleName ["Data","Text","Internal","Unsafe"],ModuleName ["Data","Text","Internal","Unsafe","Char"],ModuleName ["Data","Text","Internal","Unsafe","Shift"],ModuleName ["Data","Text","Lazy"],ModuleName ["Data","Text","Lazy","Builder"],ModuleName ["Data","Text","Lazy","Builder","Int"],ModuleName ["Data","Text","Lazy","Builder","RealFloat"],ModuleName ["Data","Text","Lazy","Encoding"],ModuleName ["Data","Text","Lazy","IO"],ModuleName ["Data","Text","Lazy","Internal"],ModuleName ["Data","Text","Lazy","Read"],ModuleName ["Data","Text","Read"],ModuleName ["Data","Text","Unsafe"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\text-1.1.1.1"], libraryDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\text-1.1.1.1"], hsLibraries = ["HStext-1.1.1.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a",InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "bytestring-0.10.4.0-ed36a2f9ab43ef97de2be397733b6499",InstalledPackageId "deepseq-1.3.0.2-e89e7ec69118ab770788c672bee3f4ca",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageId "integer-gmp-0.5.1.0-5018013522867190d73a563b47d0b8a7"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\text-1.1.1.1\\html\\text.haddock"], haddockHTMLs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\text-1.1.1.1\\html"]}),(InstalledPackageId "vector-0.10.9.1-f598cc1fa7a77295e73b7ee42470a162",InstalledPackageInfo {installedPackageId = InstalledPackageId "vector-0.10.9.1-f598cc1fa7a77295e73b7ee42470a162", sourcePackageId = PackageIdentifier {pkgName = PackageName "vector", pkgVersion = Version {versionBranch = [0,10,9,1], versionTags = []}}, license = BSD3, copyright = "(c) Roman Leshchinskiy 2008-2012", maintainer = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", author = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", stability = "", homepage = "https://github.com/haskell/vector", pkgUrl = "", synopsis = "Efficient Arrays", description = "\nAn efficient implementation of Int-indexed arrays (both mutable\nand immutable), with a powerful loop optimisation framework .\n\nIt is structured as follows:\n\n[\"Data.Vector\"] Boxed vectors of arbitrary types.\n\n[\"Data.Vector.Unboxed\"] Unboxed vectors with an adaptive\nrepresentation based on data type families.\n\n[\"Data.Vector.Storable\"] Unboxed vectors of 'Storable' types.\n\n[\"Data.Vector.Primitive\"] Unboxed vectors of primitive types as\ndefined by the @primitive@ package. \"Data.Vector.Unboxed\" is more\nflexible at no performance cost.\n\n[\"Data.Vector.Generic\"] Generic interface to the vector types.\n\nThere is also a (draft) tutorial on common uses of vector.\n\n* <http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial>\n\nChanges in version 0.10.0.1\n\n* Require @primitive@ to include workaround for a GHC array copying bug\n\nChanges in version 0.10\n\n* @NFData@ instances\n\n* More efficient block fills\n\n* Safe Haskell support removed\n", category = "Data, Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Vector","Internal","Check"],ModuleName ["Data","Vector","Fusion","Util"],ModuleName ["Data","Vector","Fusion","Stream","Size"],ModuleName ["Data","Vector","Fusion","Stream","Monadic"],ModuleName ["Data","Vector","Fusion","Stream"],ModuleName ["Data","Vector","Generic","Mutable"],ModuleName ["Data","Vector","Generic","Base"],ModuleName ["Data","Vector","Generic","New"],ModuleName ["Data","Vector","Generic"],ModuleName ["Data","Vector","Primitive","Mutable"],ModuleName ["Data","Vector","Primitive"],ModuleName ["Data","Vector","Storable","Internal"],ModuleName ["Data","Vector","Storable","Mutable"],ModuleName ["Data","Vector","Storable"],ModuleName ["Data","Vector","Unboxed","Base"],ModuleName ["Data","Vector","Unboxed","Mutable"],ModuleName ["Data","Vector","Unboxed"],ModuleName ["Data","Vector","Mutable"],ModuleName ["Data","Vector"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\vector-0.10.9.1"], libraryDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\vector-0.10.9.1"], hsLibraries = ["HSvector-0.10.9.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\vector-0.10.9.1\\include"], includes = [], depends = [InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "deepseq-1.3.0.2-e89e7ec69118ab770788c672bee3f4ca",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageId "primitive-0.5.2.1-ecbf1d412da255d95737883aa898fe0e"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\vector-0.10.9.1\\html\\vector.haddock"], haddockHTMLs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\vector-0.10.9.1\\html"]})]) (fromList [(PackageName "array",fromList [(Version {versionBranch = [0,5,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a", sourcePackageId = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,5,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Mutable and immutable arrays", description = "In addition to providing the \"Data.Array\" module\n<http://www.haskell.org/onlinereport/haskell2010/haskellch14.html as specified in the Haskell 2010 Language Report>,\nthis package also defines the classes 'IArray' of\nimmutable arrays and 'MArray' of arrays mutable within appropriate\nmonads, as well as some instances of these classes.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Array"],ModuleName ["Data","Array","Base"],ModuleName ["Data","Array","IArray"],ModuleName ["Data","Array","IO"],ModuleName ["Data","Array","IO","Safe"],ModuleName ["Data","Array","IO","Internals"],ModuleName ["Data","Array","MArray"],ModuleName ["Data","Array","MArray","Safe"],ModuleName ["Data","Array","ST"],ModuleName ["Data","Array","ST","Safe"],ModuleName ["Data","Array","Storable"],ModuleName ["Data","Array","Storable","Safe"],ModuleName ["Data","Array","Storable","Internals"],ModuleName ["Data","Array","Unboxed"],ModuleName ["Data","Array","Unsafe"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\array-0.5.0.0"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\array-0.5.0.0"], hsLibraries = ["HSarray-0.5.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/array-0.5.0.0\\array.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/array-0.5.0.0"]}])]),(PackageName "base",fromList [(Version {versionBranch = [4,7,0,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d", sourcePackageId = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,7,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Basic libraries", description = "This package contains the \"Prelude\" and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "Prelude", exposed = True, exposedModules = [ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Lazy","Safe"],ModuleName ["Control","Monad","ST","Lazy","Unsafe"],ModuleName ["Control","Monad","ST","Safe"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Control","Monad","ST","Unsafe"],ModuleName ["Control","Monad","Zip"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Coerce"],ModuleName ["Data","Complex"],ModuleName ["Data","Data"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","Functor"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","OldTypeable"],ModuleName ["Data","OldTypeable","Internal"],ModuleName ["Data","Ord"],ModuleName ["Data","Proxy"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Type","Bool"],ModuleName ["Data","Type","Coercion"],ModuleName ["Data","Type","Equality"],ModuleName ["Data","Typeable"],ModuleName ["Data","Typeable","Internal"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","Concurrent"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","ForeignPtr","Safe"],ModuleName ["Foreign","ForeignPtr","Unsafe"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Safe"],ModuleName ["Foreign","Marshal","Unsafe"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","Safe"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Char"],ModuleName ["GHC","Conc"],ModuleName ["GHC","Conc","IO"],ModuleName ["GHC","Conc","Signal"],ModuleName ["GHC","Conc","Sync"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Constants"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Fingerprint"],ModuleName ["GHC","Fingerprint","Type"],ModuleName ["GHC","Float"],ModuleName ["GHC","Float","ConversionUtils"],ModuleName ["GHC","Float","RealFracMethods"],ModuleName ["GHC","Foreign"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","GHCi"],ModuleName ["GHC","Generics"],ModuleName ["GHC","IO"],ModuleName ["GHC","IO","Buffer"],ModuleName ["GHC","IO","BufferedIO"],ModuleName ["GHC","IO","Device"],ModuleName ["GHC","IO","Encoding"],ModuleName ["GHC","IO","Encoding","CodePage"],ModuleName ["GHC","IO","Encoding","Failure"],ModuleName ["GHC","IO","Encoding","Iconv"],ModuleName ["GHC","IO","Encoding","Latin1"],ModuleName ["GHC","IO","Encoding","Types"],ModuleName ["GHC","IO","Encoding","UTF16"],ModuleName ["GHC","IO","Encoding","UTF32"],ModuleName ["GHC","IO","Encoding","UTF8"],ModuleName ["GHC","IO","Exception"],ModuleName ["GHC","IO","FD"],ModuleName ["GHC","IO","Handle"],ModuleName ["GHC","IO","Handle","FD"],ModuleName ["GHC","IO","Handle","Internals"],ModuleName ["GHC","IO","Handle","Text"],ModuleName ["GHC","IO","Handle","Types"],ModuleName ["GHC","IO","IOMode"],ModuleName ["GHC","IOArray"],ModuleName ["GHC","IORef"],ModuleName ["GHC","IP"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","MVar"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Profiling"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","STRef"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Stack"],ModuleName ["GHC","Stats"],ModuleName ["GHC","Storable"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","TypeLits"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","CPUTime"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["System","Timeout"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"],ModuleName ["GHC","IO","Encoding","CodePage","API"],ModuleName ["GHC","IO","Encoding","CodePage","Table"],ModuleName ["GHC","Conc","Windows"],ModuleName ["GHC","Windows"]], hiddenModules = [ModuleName ["Control","Monad","ST","Imp"],ModuleName ["Control","Monad","ST","Lazy","Imp"],ModuleName ["Foreign","ForeignPtr","Imp"],ModuleName ["System","Environment","ExecutablePath"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\base-4.7.0.0"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\base-4.7.0.0"], hsLibraries = ["HSbase-4.7.0.0"], extraLibraries = ["wsock32","user32","shell32"], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\base-4.7.0.0\\include"], includes = ["HsBase.h"], depends = [InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageId "integer-gmp-0.5.1.0-5018013522867190d73a563b47d0b8a7",InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/base-4.7.0.0\\base.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/base-4.7.0.0"]}])]),(PackageName "binary",fromList [(Version {versionBranch = [0,7,1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "binary-0.7.1.0-5abd5eca1ff239320cd54fc3e6b053c2", sourcePackageId = PackageIdentifier {pkgName = PackageName "binary", pkgVersion = Version {versionBranch = [0,7,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Lennart Kolmodin, Don Stewart <dons00@gmail.com>", author = "Lennart Kolmodin <kolmodin@gmail.com>", stability = "provisional", homepage = "https://github.com/kolmodin/binary", pkgUrl = "", synopsis = "Binary serialisation for Haskell values using lazy ByteStrings", description = "Efficient, pure binary serialisation using lazy ByteStrings.\nHaskell values may be encoded to and from binary formats,\nwritten to disk as binary, or sent over the network.\nThe format used can be automatically generated, or\nyou can choose to implement a custom format if needed.\nSerialisation speeds of over 1 G\\/sec have been observed,\nso this library should be suitable for high performance\nscenarios.", category = "Data, Parsing", exposed = True, exposedModules = [ModuleName ["Data","Binary"],ModuleName ["Data","Binary","Put"],ModuleName ["Data","Binary","Get"],ModuleName ["Data","Binary","Get","Internal"],ModuleName ["Data","Binary","Builder"],ModuleName ["Data","Binary","Builder","Internal"]], hiddenModules = [ModuleName ["Data","Binary","Builder","Base"],ModuleName ["Data","Binary","Class"],ModuleName ["Data","Binary","Generic"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\binary-0.7.1.0"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\binary-0.7.1.0"], hsLibraries = ["HSbinary-0.7.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a",InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "bytestring-0.10.4.0-ed36a2f9ab43ef97de2be397733b6499",InstalledPackageId "containers-0.5.5.1-c6850b8cbf84011c2c740c6f932c0fcc"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/binary-0.7.1.0\\binary.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/binary-0.7.1.0"]}])]),(PackageName "bytestring",fromList [(Version {versionBranch = [0,10,4,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "bytestring-0.10.4.0-ed36a2f9ab43ef97de2be397733b6499", sourcePackageId = PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,10,4,0], versionTags = []}}, license = BSD3, copyright = "Copyright (c) Don Stewart          2005-2009,\n(c) Duncan Coutts        2006-2013,\n(c) David Roundy         2003-2005,\n(c) Jasper Van der Jeugt 2010,\n(c) Simon Meier          2010-2013.", maintainer = "Don Stewart <dons00@gmail.com>,\nDuncan Coutts <duncan@community.haskell.org>", author = "Don Stewart,\nDuncan Coutts", stability = "", homepage = "https://github.com/haskell/bytestring", pkgUrl = "", synopsis = "Fast, compact, strict and lazy byte strings with a list interface", description = "An efficient compact, immutable byte string type (both strict and lazy)\nsuitable for binary or 8-bit character data.\n\nThe 'ByteString' type represents sequences of bytes or 8-bit characters.\nIt is suitable for high performance use, both in terms of large data\nquantities, or high speed requirements. The 'ByteString' functions follow\nthe same style as Haskell\\'s ordinary lists, so it is easy to convert code\nfrom using 'String' to 'ByteString'.\n\nTwo 'ByteString' variants are provided:\n\n* Strict 'ByteString's keep the string as a single large array. This\nmakes them convenient for passing data between C and Haskell.\n\n* Lazy 'ByteString's use a lazy list of strict chunks which makes it\nsuitable for I\\/O streaming tasks.\n\nThe @Char8@ modules provide a character-based view of the same\nunderlying 'ByteString' types. This makes it convenient to handle mixed\nbinary and 8-bit character content (which is common in many file formats\nand network protocols).\n\nThe 'Builder' module provides an efficient way to build up 'ByteString's\nin an ad-hoc way by repeated concatenation. This is ideal for fast\nserialisation or pretty printing.\n\nThere is also a 'ShortByteString' type which has a lower memory overhead\nand can can be converted to or from a 'ByteString', but supports very few\nother operations. It is suitable for keeping many short strings in memory.\n\n'ByteString's are not designed for Unicode. For Unicode strings you should\nuse the 'Text' type from the @text@ package.\n\nThese modules are intended to be imported qualified, to avoid name clashes\nwith \"Prelude\" functions, e.g.\n\n> import qualified Data.ByteString as BS", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","ByteString"],ModuleName ["Data","ByteString","Char8"],ModuleName ["Data","ByteString","Unsafe"],ModuleName ["Data","ByteString","Internal"],ModuleName ["Data","ByteString","Lazy"],ModuleName ["Data","ByteString","Lazy","Char8"],ModuleName ["Data","ByteString","Lazy","Internal"],ModuleName ["Data","ByteString","Short"],ModuleName ["Data","ByteString","Short","Internal"],ModuleName ["Data","ByteString","Builder"],ModuleName ["Data","ByteString","Builder","Extra"],ModuleName ["Data","ByteString","Builder","Prim"],ModuleName ["Data","ByteString","Builder","Internal"],ModuleName ["Data","ByteString","Builder","Prim","Internal"],ModuleName ["Data","ByteString","Lazy","Builder"],ModuleName ["Data","ByteString","Lazy","Builder","Extras"],ModuleName ["Data","ByteString","Lazy","Builder","ASCII"]], hiddenModules = [ModuleName ["Data","ByteString","Builder","ASCII"],ModuleName ["Data","ByteString","Builder","Prim","Binary"],ModuleName ["Data","ByteString","Builder","Prim","ASCII"],ModuleName ["Data","ByteString","Builder","Prim","Internal","Floating"],ModuleName ["Data","ByteString","Builder","Prim","Internal","UncheckedShifts"],ModuleName ["Data","ByteString","Builder","Prim","Internal","Base16"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\bytestring-0.10.4.0"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\bytestring-0.10.4.0"], hsLibraries = ["HSbytestring-0.10.4.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\bytestring-0.10.4.0\\include"], includes = ["fpstring.h"], depends = [InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "deepseq-1.3.0.2-e89e7ec69118ab770788c672bee3f4ca",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageId "integer-gmp-0.5.1.0-5018013522867190d73a563b47d0b8a7"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/bytestring-0.10.4.0\\bytestring.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/bytestring-0.10.4.0"]}])]),(PackageName "containers",fromList [(Version {versionBranch = [0,5,5,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "containers-0.5.5.1-c6850b8cbf84011c2c740c6f932c0fcc", sourcePackageId = PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,5,5,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "fox@ucw.cz", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Assorted concrete container types", description = "This package contains efficient general-purpose implementations\nof various basic immutable container types.  The declared cost of\neach operation is either worst-case or amortized, but remains\nvalid even if structures are shared.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","IntMap"],ModuleName ["Data","IntMap","Lazy"],ModuleName ["Data","IntMap","Strict"],ModuleName ["Data","IntSet"],ModuleName ["Data","Map"],ModuleName ["Data","Map","Lazy"],ModuleName ["Data","Map","Strict"],ModuleName ["Data","Set"],ModuleName ["Data","Graph"],ModuleName ["Data","Sequence"],ModuleName ["Data","Tree"]], hiddenModules = [ModuleName ["Data","BitUtil"],ModuleName ["Data","IntMap","Base"],ModuleName ["Data","IntSet","Base"],ModuleName ["Data","Map","Base"],ModuleName ["Data","Set","Base"],ModuleName ["Data","StrictPair"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\containers-0.5.5.1"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\containers-0.5.5.1"], hsLibraries = ["HScontainers-0.5.5.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a",InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "deepseq-1.3.0.2-e89e7ec69118ab770788c672bee3f4ca",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/containers-0.5.5.1\\containers.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/containers-0.5.5.1"]}])]),(PackageName "deepseq",fromList [(Version {versionBranch = [1,3,0,2], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "deepseq-1.3.0.2-e89e7ec69118ab770788c672bee3f4ca", sourcePackageId = PackageIdentifier {pkgName = PackageName "deepseq", pkgVersion = Version {versionBranch = [1,3,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Deep evaluation of data structures", description = "This package provides methods for fully evaluating data structures\n(\\\"deep evaluation\\\"). Deep evaluation is often used for adding\nstrictness to a program, e.g. in order to force pending exceptions,\nremove space leaks, or force lazy I/O to happen. It is also useful\nin parallel programs, to ensure pending work does not migrate to the\nwrong thread.\n\nThe primary use of this package is via the 'deepseq' function, a\n\\\"deep\\\" version of 'seq'. It is implemented on top of an 'NFData'\ntypeclass (\\\"Normal Form Data\\\", data structures with no unevaluated\ncomponents) which defines strategies for fully evaluating different\ndata types.\n\nIf you want to automatically derive 'NFData' instances via the\n\"GHC.Generics\" facility, there is a companion package\n<http://hackage.haskell.org/package/deepseq-generics deepseq-generics>\nwhich builds on top of this package.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","DeepSeq"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\deepseq-1.3.0.2"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\deepseq-1.3.0.2"], hsLibraries = ["HSdeepseq-1.3.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a",InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/deepseq-1.3.0.2\\deepseq.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/deepseq-1.3.0.2"]}])]),(PackageName "ghc-prim",fromList [(Version {versionBranch = [0,3,1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789", sourcePackageId = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,3,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "GHC primitives", description = "GHC primitives.", category = "GHC", exposed = True, exposedModules = [ModuleName ["GHC","CString"],ModuleName ["GHC","Classes"],ModuleName ["GHC","Debug"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Magic"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"],ModuleName ["GHC","Prim"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\ghc-prim-0.3.1.0"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\ghc-prim-0.3.1.0"], hsLibraries = ["HSghc-prim-0.3.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "builtin_rts"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/ghc-prim-0.3.1.0\\ghc-prim.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/ghc-prim-0.3.1.0"]}])]),(PackageName "hashable",fromList [(Version {versionBranch = [1,2,1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "hashable-1.2.1.0-6f0032ab00e63521dacef18e86ce57d0", sourcePackageId = PackageIdentifier {pkgName = PackageName "hashable", pkgVersion = Version {versionBranch = [1,2,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "johan.tibell@gmail.com", author = "Milan Straka <fox@ucw.cz>\nJohan Tibell <johan.tibell@gmail.com>", stability = "Provisional", homepage = "http://github.com/tibbe/hashable", pkgUrl = "", synopsis = "A class for types that can be converted to a hash value", description = "This package defines a class, 'Hashable', for types that\ncan be converted to a hash value.  This class\nexists for the benefit of hashing-based data\nstructures.  The package provides instances for\nbasic types and a way to combine hash values.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Hashable"]], hiddenModules = [ModuleName ["Data","Hashable","Class"],ModuleName ["Data","Hashable","Generic"]], trusted = False, importDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\hashable-1.2.1.0"], libraryDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\hashable-1.2.1.0"], hsLibraries = ["HShashable-1.2.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "bytestring-0.10.4.0-ed36a2f9ab43ef97de2be397733b6499",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageId "integer-gmp-0.5.1.0-5018013522867190d73a563b47d0b8a7",InstalledPackageId "text-1.1.1.1-f903c968a4109110e124c22fe978a809"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\hashable-1.2.1.0\\html\\hashable.haddock"], haddockHTMLs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\hashable-1.2.1.0\\html"]}])]),(PackageName "hashtables",fromList [(Version {versionBranch = [1,1,2,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "hashtables-1.1.2.1-40a91ebc1782a812c1bdf347e174865f", sourcePackageId = PackageIdentifier {pkgName = PackageName "hashtables", pkgVersion = Version {versionBranch = [1,1,2,1], versionTags = []}}, license = BSD3, copyright = "(c) 2011-2013, Google, Inc.", maintainer = "greg@gregorycollins.net", author = "Gregory Collins", stability = "", homepage = "http://github.com/gregorycollins/hashtables", pkgUrl = "", synopsis = "Mutable hash tables in the ST monad", description = "This package provides a couple of different implementations of mutable hash\ntables in the ST monad, as well as a typeclass abstracting their common\noperations, and a set of wrappers to use the hash tables in the IO monad.\n\n/QUICK START/: documentation for the hash table operations is provided in the\n\"Data.HashTable.Class\" module, and the IO wrappers (which most users will\nprobably prefer) are located in the \"Data.HashTable.IO\" module.\n\nThis package currently contains three hash table implementations:\n\n1. \"Data.HashTable.ST.Basic\" contains a basic open-addressing hash table\nusing linear probing as the collision strategy. On a pure speed basis it\nshould currently be the fastest available Haskell hash table\nimplementation for lookups, although it has a higher memory overhead\nthan the other tables and can suffer from long delays when the table is\nresized because all of the elements in the table need to be rehashed.\n\n2. \"Data.HashTable.ST.Cuckoo\" contains an implementation of \\\"cuckoo\nhashing\\\" as introduced by Pagh and Rodler in 2001 (see\n<http://en.wikipedia.org/wiki/Cuckoo_hashing>). Cuckoo hashing has\nworst-case /O(1)/ lookups and can reach a high \\\"load factor\\\", in which\nthe table can perform acceptably well even when more than 90% full.\nRandomized testing shows this implementation of cuckoo hashing to be\nslightly faster on insert and slightly slower on lookup than\n\"Data.Hashtable.ST.Basic\", while being more space efficient by about a\nhalf-word per key-value mapping. Cuckoo hashing, like the basic hash\ntable implementation using linear probing, can suffer from long delays\nwhen the table is resized.\n\n3. \"Data.HashTable.ST.Linear\" contains a linear hash table (see\n<http://en.wikipedia.org/wiki/Linear_hashing>), which trades some insert\nand lookup performance for higher space efficiency and much shorter\ndelays when expanding the table. In most cases, benchmarks show this\ntable to be currently slightly faster than @Data.HashTable@ from the\nHaskell base library.\n\nIt is recommended to create a concrete type alias in your code when using this\npackage, i.e.:\n\n> import qualified Data.HashTable.IO as H\n>\n> type HashTable k v = H.BasicHashTable k v\n>\n> foo :: IO (HashTable Int Int)\n> foo = do\n>     ht <- H.new\n>     H.insert ht 1 1\n>     return ht\n\nFirstly, this makes it easy to switch to a different hash table implementation,\nand secondly, using a concrete type rather than leaving your functions abstract\nin the HashTable class should allow GHC to optimize away the typeclass\ndictionaries.\n\nThis package accepts a couple of different cabal flags:\n\n* @unsafe-tricks@, default /ON/. If this flag is enabled, we use some\nunsafe GHC-specific tricks to save indirections (namely @unsafeCoerce#@\nand @reallyUnsafePtrEquality#@. These techniques rely on assumptions\nabout the behaviour of the GHC runtime system and, although they've been\ntested and should be safe under normal conditions, are slightly\ndangerous. Caveat emptor. In particular, these techniques are\nincompatible with HPC code coverage reports.\n\n* @sse41@, default /OFF/. If this flag is enabled, we use some SSE 4.1\ninstructions (see <http://en.wikipedia.org/wiki/SSE4>, first available on\nIntel Core 2 processors) to speed up cache-line searches for cuckoo\nhashing.\n\n* @bounds-checking@, default /OFF/. If this flag is enabled, array accesses\nare bounds-checked.\n\n* @debug@, default /OFF/. If turned on, we'll rudely spew debug output to\nstdout.\n\n* @portable@, default /OFF/. If this flag is enabled, we use only pure\nHaskell code and try not to use unportable GHC extensions. Turning this\nflag on forces @unsafe-tricks@ and @sse41@ /OFF/.\n\nThis package has been tested with GHC 7.0.3, on:\n\n* a MacBook Pro running Snow Leopard with an Intel Core i5 processor,\nrunning GHC 7.0.3 in 64-bit mode.\n\n* an Arch Linux desktop with an AMD Phenom II X4 940 quad-core processor.\n\n* a MacBook Pro running Snow Leopard with an Intel Core 2 Duo processor,\nrunning GHC 6.12.3 in 32-bit mode.\n\nPlease send bug reports to\n<https://github.com/gregorycollins/hashtables/issues>.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","HashTable","Class"],ModuleName ["Data","HashTable","IO"],ModuleName ["Data","HashTable","ST","Basic"],ModuleName ["Data","HashTable","ST","Cuckoo"],ModuleName ["Data","HashTable","ST","Linear"]], hiddenModules = [ModuleName ["Data","HashTable","Internal","Array"],ModuleName ["Data","HashTable","Internal","IntArray"],ModuleName ["Data","HashTable","Internal","CacheLine"],ModuleName ["Data","HashTable","Internal","CheapPseudoRandomBitStream"],ModuleName ["Data","HashTable","Internal","UnsafeTricks"],ModuleName ["Data","HashTable","Internal","Utils"],ModuleName ["Data","HashTable","Internal","Linear","Bucket"]], trusted = False, importDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\hashtables-1.1.2.1"], libraryDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\hashtables-1.1.2.1"], hsLibraries = ["HShashtables-1.1.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageId "hashable-1.2.1.0-6f0032ab00e63521dacef18e86ce57d0",InstalledPackageId "primitive-0.5.2.1-ecbf1d412da255d95737883aa898fe0e",InstalledPackageId "vector-0.10.9.1-f598cc1fa7a77295e73b7ee42470a162"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\hashtables-1.1.2.1\\html\\hashtables.haddock"], haddockHTMLs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\hashtables-1.1.2.1\\html"]}])]),(PackageName "integer-gmp",fromList [(Version {versionBranch = [0,5,1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "integer-gmp-0.5.1.0-5018013522867190d73a563b47d0b8a7", sourcePackageId = PackageIdentifier {pkgName = PackageName "integer-gmp", pkgVersion = Version {versionBranch = [0,5,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "Integer library based on GMP", description = "This package provides the low-level implementation of the standard\n'Integer' type based on the\n<http://gmplib.org/ GNU Multiple Precision Arithmetic Library (GMP)>.\n\nThis package provides access to the internal representation of\n'Integer' as well as primitive operations with no proper error\nhandling, and should only be used directly with the utmost care.\n\nFor more details about the design of @integer-gmp@, see\n<https://ghc.haskell.org/trac/ghc/wiki/Commentary/Libraries/Integer GHC Commentary: Libraries/Integer>.", category = "Numerical", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","GMP","Internals"],ModuleName ["GHC","Integer","GMP","Prim"],ModuleName ["GHC","Integer","Logarithms"],ModuleName ["GHC","Integer","Logarithms","Internals"]], hiddenModules = [ModuleName ["GHC","Integer","Type"]], trusted = False, importDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\integer-gmp-0.5.1.0"], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\integer-gmp-0.5.1.0"], hsLibraries = ["HSinteger-gmp-0.5.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib\\integer-gmp-0.5.1.0\\include"], includes = [], depends = [InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/integer-gmp-0.5.1.0\\integer-gmp.haddock"], haddockHTMLs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/../doc/html/libraries/integer-gmp-0.5.1.0"]}])]),(PackageName "primitive",fromList [(Version {versionBranch = [0,5,2,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "primitive-0.5.2.1-ecbf1d412da255d95737883aa898fe0e", sourcePackageId = PackageIdentifier {pkgName = PackageName "primitive", pkgVersion = Version {versionBranch = [0,5,2,1], versionTags = []}}, license = BSD3, copyright = "(c) Roman Leshchinskiy 2009-2012", maintainer = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", author = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", stability = "", homepage = "https://github.com/haskell/primitive", pkgUrl = "", synopsis = "Primitive memory-related operations", description = "This package provides various primitive memory-related operations.", category = "Data", exposed = True, exposedModules = [ModuleName ["Control","Monad","Primitive"],ModuleName ["Data","Primitive"],ModuleName ["Data","Primitive","MachDeps"],ModuleName ["Data","Primitive","Types"],ModuleName ["Data","Primitive","Array"],ModuleName ["Data","Primitive","ByteArray"],ModuleName ["Data","Primitive","Addr"],ModuleName ["Data","Primitive","MutVar"]], hiddenModules = [ModuleName ["Data","Primitive","Internal","Compat"],ModuleName ["Data","Primitive","Internal","Operations"]], trusted = False, importDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\primitive-0.5.2.1"], libraryDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\primitive-0.5.2.1"], hsLibraries = ["HSprimitive-0.5.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\primitive-0.5.2.1\\include"], includes = ["primitive-memops.h"], depends = [InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\primitive-0.5.2.1\\html\\primitive.haddock"], haddockHTMLs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\primitive-0.5.2.1\\html"]}])]),(PackageName "rts",fromList [(Version {versionBranch = [1,0], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "builtin_rts", sourcePackageId = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", synopsis = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], trusted = False, importDirs = [], libraryDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/rts-1.0"], hsLibraries = ["HSrts","Cffi-6"], extraLibraries = ["m","wsock32","gdi32","winmm"], extraGHCiLibraries = [], includeDirs = ["C:\\Program Files (x86)\\ghc-7.8.2\\lib/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-Wl,-u,_ghczmprim_GHCziTypes_Izh_static_info","-Wl,-u,_ghczmprim_GHCziTypes_Czh_static_info","-Wl,-u,_ghczmprim_GHCziTypes_Fzh_static_info","-Wl,-u,_ghczmprim_GHCziTypes_Dzh_static_info","-Wl,-u,_base_GHCziPtr_Ptr_static_info","-Wl,-u,_ghczmprim_GHCziTypes_Wzh_static_info","-Wl,-u,_base_GHCziInt_I8zh_static_info","-Wl,-u,_base_GHCziInt_I16zh_static_info","-Wl,-u,_base_GHCziInt_I32zh_static_info","-Wl,-u,_base_GHCziInt_I64zh_static_info","-Wl,-u,_base_GHCziWord_W8zh_static_info","-Wl,-u,_base_GHCziWord_W16zh_static_info","-Wl,-u,_base_GHCziWord_W32zh_static_info","-Wl,-u,_base_GHCziWord_W64zh_static_info","-Wl,-u,_base_GHCziStable_StablePtr_static_info","-Wl,-u,_ghczmprim_GHCziTypes_Izh_con_info","-Wl,-u,_ghczmprim_GHCziTypes_Czh_con_info","-Wl,-u,_ghczmprim_GHCziTypes_Fzh_con_info","-Wl,-u,_ghczmprim_GHCziTypes_Dzh_con_info","-Wl,-u,_base_GHCziPtr_Ptr_con_info","-Wl,-u,_base_GHCziPtr_FunPtr_con_info","-Wl,-u,_base_GHCziStable_StablePtr_con_info","-Wl,-u,_ghczmprim_GHCziTypes_False_closure","-Wl,-u,_ghczmprim_GHCziTypes_True_closure","-Wl,-u,_base_GHCziPack_unpackCString_closure","-Wl,-u,_base_GHCziIOziException_stackOverflow_closure","-Wl,-u,_base_GHCziIOziException_heapOverflow_closure","-Wl,-u,_base_ControlziExceptionziBase_nonTermination_closure","-Wl,-u,_base_GHCziIOziException_blockedIndefinitelyOnMVar_closure","-Wl,-u,_base_GHCziIOziException_blockedIndefinitelyOnSTM_closure","-Wl,-u,_base_ControlziExceptionziBase_nestedAtomically_closure","-Wl,-u,_base_GHCziWeak_runFinalizzerBatch_closure","-Wl,-u,_base_GHCziTopHandler_flushStdHandles_closure","-Wl,-u,_base_GHCziTopHandler_runIO_closure","-Wl,-u,_base_GHCziTopHandler_runNonIO_closure","-Wl,-u,_base_GHCziConcziIO_ensureIOManagerIsRunning_closure","-Wl,-u,_base_GHCziConcziIO_ioManagerCapabilitiesChanged_closure","-Wl,-u,_base_GHCziConcziSync_runSparks_closure","-Wl,-u,_base_GHCziConcziSignal_runHandlers_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}])]),(PackageName "stringsearch",fromList [(Version {versionBranch = [0,3,6,5], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "stringsearch-0.3.6.5-8efc02498c84cc6220a478d01a1746a0", sourcePackageId = PackageIdentifier {pkgName = PackageName "stringsearch", pkgVersion = Version {versionBranch = [0,3,6,5], versionTags = []}}, license = BSD3, copyright = "(c) 2007-2011\nDaniel Fischer, Chris Kuklewicz, Justin Bailey", maintainer = "daniel.is.fischer@googlemail.com", author = "Daniel Fischer, Chris Kuklewicz, Justin Bailey", stability = "", homepage = "https://bitbucket.org/dafis/stringsearch", pkgUrl = "", synopsis = "Fast searching, splitting and replacing of ByteStrings", description = "This package provides several functions to quickly\nsearch for substrings in strict or lazy ByteStrings.\nIt also provides functions for breaking or splitting\non substrings and replacing all occurrences of a\nsubstring (the first in case of overlaps) with another.\nGHC before 6.10 are no longer supported, other compilers\nonly if they support BangPatterns. If you need it to\nwork with other compilers, send a feature request.", category = "Text, Search", exposed = True, exposedModules = [ModuleName ["Data","ByteString","Search"],ModuleName ["Data","ByteString","Search","BoyerMoore"],ModuleName ["Data","ByteString","Search","DFA"],ModuleName ["Data","ByteString","Search","KarpRabin"],ModuleName ["Data","ByteString","Search","KMP"],ModuleName ["Data","ByteString","Search","KnuthMorrisPratt"],ModuleName ["Data","ByteString","Search","Substitution"],ModuleName ["Data","ByteString","Lazy","Search"],ModuleName ["Data","ByteString","Lazy","Search","DFA"],ModuleName ["Data","ByteString","Lazy","Search","KarpRabin"],ModuleName ["Data","ByteString","Lazy","Search","KMP"]], hiddenModules = [ModuleName ["Data","ByteString","Search","Internal","BoyerMoore"],ModuleName ["Data","ByteString","Search","Internal","KnuthMorrisPratt"],ModuleName ["Data","ByteString","Search","Internal","Utils"],ModuleName ["Data","ByteString","Lazy","Search","Internal","BoyerMoore"]], trusted = False, importDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\stringsearch-0.3.6.5"], libraryDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\stringsearch-0.3.6.5"], hsLibraries = ["HSstringsearch-0.3.6.5"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a",InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "bytestring-0.10.4.0-ed36a2f9ab43ef97de2be397733b6499",InstalledPackageId "containers-0.5.5.1-c6850b8cbf84011c2c740c6f932c0fcc"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\stringsearch-0.3.6.5\\html\\stringsearch.haddock"], haddockHTMLs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\stringsearch-0.3.6.5\\html"]}])]),(PackageName "text",fromList [(Version {versionBranch = [1,1,1,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "text-1.1.1.1-f903c968a4109110e124c22fe978a809", sourcePackageId = PackageIdentifier {pkgName = PackageName "text", pkgVersion = Version {versionBranch = [1,1,1,1], versionTags = []}}, license = BSD3, copyright = "2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper", maintainer = "Bryan O'Sullivan <bos@serpentine.com>", author = "Bryan O'Sullivan <bos@serpentine.com>", stability = "", homepage = "https://github.com/bos/text", pkgUrl = "", synopsis = "An efficient packed Unicode text type.", description = "\nAn efficient packed, immutable Unicode text type (both strict and\nlazy), with a powerful loop fusion optimization framework.\n\nThe 'Text' type represents Unicode character strings, in a time and\nspace-efficient manner. This package provides text processing\ncapabilities that are optimized for performance critical use, both\nin terms of large data quantities and high speed.\n\nThe 'Text' type provides character-encoding, type-safe case\nconversion via whole-string case conversion functions. It also\nprovides a range of functions for converting 'Text' values to and from\n'ByteStrings', using several standard encodings.\n\nEfficient locale-sensitive support for text IO is also supported.\n\nThese modules are intended to be imported qualified, to avoid name\nclashes with Prelude functions, e.g.\n\n> import qualified Data.Text as T\n\nTo use an extended and very rich family of functions for working\nwith Unicode text (including normalization, regular expressions,\nnon-standard encodings, text breaking, and locales), see\nthe @text-icu@ package:\n<http://hackage.haskell.org/package/text-icu>", category = "Data, Text", exposed = True, exposedModules = [ModuleName ["Data","Text"],ModuleName ["Data","Text","Array"],ModuleName ["Data","Text","Encoding"],ModuleName ["Data","Text","Encoding","Error"],ModuleName ["Data","Text","Foreign"],ModuleName ["Data","Text","IO"],ModuleName ["Data","Text","Internal"],ModuleName ["Data","Text","Internal","Builder"],ModuleName ["Data","Text","Internal","Builder","Functions"],ModuleName ["Data","Text","Internal","Builder","Int","Digits"],ModuleName ["Data","Text","Internal","Builder","RealFloat","Functions"],ModuleName ["Data","Text","Internal","Encoding","Fusion"],ModuleName ["Data","Text","Internal","Encoding","Fusion","Common"],ModuleName ["Data","Text","Internal","Encoding","Utf16"],ModuleName ["Data","Text","Internal","Encoding","Utf32"],ModuleName ["Data","Text","Internal","Encoding","Utf8"],ModuleName ["Data","Text","Internal","Functions"],ModuleName ["Data","Text","Internal","Fusion"],ModuleName ["Data","Text","Internal","Fusion","CaseMapping"],ModuleName ["Data","Text","Internal","Fusion","Common"],ModuleName ["Data","Text","Internal","Fusion","Size"],ModuleName ["Data","Text","Internal","Fusion","Types"],ModuleName ["Data","Text","Internal","IO"],ModuleName ["Data","Text","Internal","Lazy"],ModuleName ["Data","Text","Internal","Lazy","Encoding","Fusion"],ModuleName ["Data","Text","Internal","Lazy","Fusion"],ModuleName ["Data","Text","Internal","Lazy","Search"],ModuleName ["Data","Text","Internal","Private"],ModuleName ["Data","Text","Internal","Read"],ModuleName ["Data","Text","Internal","Search"],ModuleName ["Data","Text","Internal","Unsafe"],ModuleName ["Data","Text","Internal","Unsafe","Char"],ModuleName ["Data","Text","Internal","Unsafe","Shift"],ModuleName ["Data","Text","Lazy"],ModuleName ["Data","Text","Lazy","Builder"],ModuleName ["Data","Text","Lazy","Builder","Int"],ModuleName ["Data","Text","Lazy","Builder","RealFloat"],ModuleName ["Data","Text","Lazy","Encoding"],ModuleName ["Data","Text","Lazy","IO"],ModuleName ["Data","Text","Lazy","Internal"],ModuleName ["Data","Text","Lazy","Read"],ModuleName ["Data","Text","Read"],ModuleName ["Data","Text","Unsafe"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\text-1.1.1.1"], libraryDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\text-1.1.1.1"], hsLibraries = ["HStext-1.1.1.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [InstalledPackageId "array-0.5.0.0-d6dced7102e06b066754bce6db186c7a",InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "bytestring-0.10.4.0-ed36a2f9ab43ef97de2be397733b6499",InstalledPackageId "deepseq-1.3.0.2-e89e7ec69118ab770788c672bee3f4ca",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageId "integer-gmp-0.5.1.0-5018013522867190d73a563b47d0b8a7"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\text-1.1.1.1\\html\\text.haddock"], haddockHTMLs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\text-1.1.1.1\\html"]}])]),(PackageName "vector",fromList [(Version {versionBranch = [0,10,9,1], versionTags = []},[InstalledPackageInfo {installedPackageId = InstalledPackageId "vector-0.10.9.1-f598cc1fa7a77295e73b7ee42470a162", sourcePackageId = PackageIdentifier {pkgName = PackageName "vector", pkgVersion = Version {versionBranch = [0,10,9,1], versionTags = []}}, license = BSD3, copyright = "(c) Roman Leshchinskiy 2008-2012", maintainer = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", author = "Roman Leshchinskiy <rl@cse.unsw.edu.au>", stability = "", homepage = "https://github.com/haskell/vector", pkgUrl = "", synopsis = "Efficient Arrays", description = "\nAn efficient implementation of Int-indexed arrays (both mutable\nand immutable), with a powerful loop optimisation framework .\n\nIt is structured as follows:\n\n[\"Data.Vector\"] Boxed vectors of arbitrary types.\n\n[\"Data.Vector.Unboxed\"] Unboxed vectors with an adaptive\nrepresentation based on data type families.\n\n[\"Data.Vector.Storable\"] Unboxed vectors of 'Storable' types.\n\n[\"Data.Vector.Primitive\"] Unboxed vectors of primitive types as\ndefined by the @primitive@ package. \"Data.Vector.Unboxed\" is more\nflexible at no performance cost.\n\n[\"Data.Vector.Generic\"] Generic interface to the vector types.\n\nThere is also a (draft) tutorial on common uses of vector.\n\n* <http://haskell.org/haskellwiki/Numeric_Haskell:_A_Vector_Tutorial>\n\nChanges in version 0.10.0.1\n\n* Require @primitive@ to include workaround for a GHC array copying bug\n\nChanges in version 0.10\n\n* @NFData@ instances\n\n* More efficient block fills\n\n* Safe Haskell support removed\n", category = "Data, Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Vector","Internal","Check"],ModuleName ["Data","Vector","Fusion","Util"],ModuleName ["Data","Vector","Fusion","Stream","Size"],ModuleName ["Data","Vector","Fusion","Stream","Monadic"],ModuleName ["Data","Vector","Fusion","Stream"],ModuleName ["Data","Vector","Generic","Mutable"],ModuleName ["Data","Vector","Generic","Base"],ModuleName ["Data","Vector","Generic","New"],ModuleName ["Data","Vector","Generic"],ModuleName ["Data","Vector","Primitive","Mutable"],ModuleName ["Data","Vector","Primitive"],ModuleName ["Data","Vector","Storable","Internal"],ModuleName ["Data","Vector","Storable","Mutable"],ModuleName ["Data","Vector","Storable"],ModuleName ["Data","Vector","Unboxed","Base"],ModuleName ["Data","Vector","Unboxed","Mutable"],ModuleName ["Data","Vector","Unboxed"],ModuleName ["Data","Vector","Mutable"],ModuleName ["Data","Vector"]], hiddenModules = [], trusted = False, importDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\vector-0.10.9.1"], libraryDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\vector-0.10.9.1"], hsLibraries = ["HSvector-0.10.9.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\i386-windows-ghc-7.8.2\\vector-0.10.9.1\\include"], includes = [], depends = [InstalledPackageId "base-4.7.0.0-04d81d7ca5a6791f10503048a0230e8d",InstalledPackageId "deepseq-1.3.0.2-e89e7ec69118ab770788c672bee3f4ca",InstalledPackageId "ghc-prim-0.3.1.0-ce90ac6a8f12843fad1e5c4fdcdc7789",InstalledPackageId "primitive-0.5.2.1-ecbf1d412da255d95737883aa898fe0e"], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\vector-0.10.9.1\\html\\vector.haddock"], haddockHTMLs = ["C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\doc\\i386-windows-ghc-7.8.2\\vector-0.10.9.1\\html"]}])])]), pkgDescrFile = Just ".\\RefSerialize.cabal", localPkgDescr = PackageDescription {package = PackageIdentifier {pkgName = PackageName "RefSerialize", pkgVersion = Version {versionBranch = [0,3,1,3], versionTags = []}}, license = BSD3, licenseFile = "LICENSE", copyright = "", maintainer = "agocorona@gmail.com", author = "Alberto G\243mez Corona", stability = "", testedWith = [(GHC,ThisVersion (Version {versionBranch = [6,8,2], versionTags = []}))], homepage = "", pkgUrl = "", bugReports = "", sourceRepos = [], synopsis = "Write to and read from ByteStrings maintaining internal memory references", description = "Read, Show and Binary instances do not check for internal data references to the same address.\nAs a result, the data is duplicated when serialized. This is a waste of space in the filesystem\nand  also a waste of serialization time. but the worst consequence is that, when the serialized data is read,\nit allocates multiple copies for the same object when referenced multiple times. Because multiple referenced\ndata is very typical in a pure language such is Haskell, this means that the resulting data loose the beatiful\neconomy of space and processing time that referential transparency permits.\n\nIn this release:\n\nCompatibility with older versions of bytestring that have no 'toStrict' call\n\ndeserialization is much, much faster by using the stringsearch package\n\nSee \"Data.RefSerialize\" for details", category = "Parsing, Data, Database", customFieldsPD = [], buildDepends = [Dependency (PackageName "base") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [4], versionTags = []})) (LaterVersion (Version {versionBranch = [4], versionTags = []}))) (EarlierVersion (Version {versionBranch = [5], versionTags = []}))) (ThisVersion (Version {versionBranch = [4,7,0,0], versionTags = []}))),Dependency (PackageName "binary") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,7,1,0], versionTags = []}))),Dependency (PackageName "bytestring") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,10,4,0], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,5,5,1], versionTags = []}))),Dependency (PackageName "hashtables") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,2,1], versionTags = []}))),Dependency (PackageName "stringsearch") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,3,6,5], versionTags = []})))], specVersionRaw = Right AnyVersion, buildType = Just Simple, library = Just (Library {exposedModules = [ModuleName ["Data","RefSerialize"],ModuleName ["Data","RefSerialize","Parser"],ModuleName ["Data","RefSerialize","Serialize"]], libExposed = True, libBuildInfo = BuildInfo {buildable = True, buildTools = [], cppOptions = [], ccOptions = [], ldOptions = [], pkgconfigDepends = [], frameworks = [], cSources = [], hsSourceDirs = ["."], otherModules = [], defaultLanguage = Nothing, otherLanguages = [], defaultExtensions = [], otherExtensions = [], oldExtensions = [], extraLibs = [], extraLibDirs = [], includeDirs = [], includes = [], installIncludes = [], options = [], ghcProfOptions = [], ghcSharedOptions = [], customFieldsBI = [], targetBuildDepends = [Dependency (PackageName "base") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [4], versionTags = []})) (LaterVersion (Version {versionBranch = [4], versionTags = []}))) (EarlierVersion (Version {versionBranch = [5], versionTags = []}))) (ThisVersion (Version {versionBranch = [4,7,0,0], versionTags = []}))),Dependency (PackageName "binary") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,7,1,0], versionTags = []}))),Dependency (PackageName "bytestring") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,10,4,0], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,5,5,1], versionTags = []}))),Dependency (PackageName "hashtables") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [1,1,2,1], versionTags = []}))),Dependency (PackageName "stringsearch") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,3,6,5], versionTags = []})))]}}), executables = [], testSuites = [], benchmarks = [], dataFiles = [], dataDir = "", extraSrcFiles = [], extraTmpFiles = [], extraDocFiles = []}, withPrograms = [("ar",ConfiguredProgram {programId = "ar", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin\\ar.exe"}}),("cpphs",ConfiguredProgram {programId = "cpphs", programVersion = Just (Version {versionBranch = [1,18,4], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin\\cpphs.exe"}}),("gcc",ConfiguredProgram {programId = "gcc", programVersion = Just (Version {versionBranch = [4,5,2], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin\\gcc.exe"}}),("ghc",ConfiguredProgram {programId = "ghc", programVersion = Just (Version {versionBranch = [7,8,2], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\ghc-7.8.2\\bin\\ghc.exe"}}),("ghc-pkg",ConfiguredProgram {programId = "ghc-pkg", programVersion = Just (Version {versionBranch = [7,8,2], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\ghc-7.8.2\\bin\\ghc-pkg.exe"}}),("haddock",ConfiguredProgram {programId = "haddock", programVersion = Just (Version {versionBranch = [2,14,2], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\ghc-7.8.2\\bin\\haddock.exe"}}),("happy",ConfiguredProgram {programId = "happy", programVersion = Just (Version {versionBranch = [1,19,3], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin\\happy.exe"}}),("hpc",ConfiguredProgram {programId = "hpc", programVersion = Just (Version {versionBranch = [0,67], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\ghc-7.8.2\\bin\\hpc.exe"}}),("hsc2hs",ConfiguredProgram {programId = "hsc2hs", programVersion = Just (Version {versionBranch = [0,67], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\ghc-7.8.2\\bin\\hsc2hs.exe"}}),("hscolour",ConfiguredProgram {programId = "hscolour", programVersion = Just (Version {versionBranch = [1,20], versionTags = []}), programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin\\HsColour.exe"}}),("ld",ConfiguredProgram {programId = "ld", programVersion = Nothing, programDefaultArgs = ["-x"], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin\\ld.exe"}}),("ranlib",ConfiguredProgram {programId = "ranlib", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin\\ranlib.exe"}}),("strip",ConfiguredProgram {programId = "strip", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin\\strip.exe"}}),("tar",ConfiguredProgram {programId = "tar", programVersion = Nothing, programDefaultArgs = [], programOverrideArgs = [], programOverrideEnv = [("PATH",Just "C:\\Program Files (x86)\\AMD APP\\bin\\x86_64;C:\\Program Files (x86)\\AMD APP\\bin\\x86;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Live\\Shared;C:\\Program Files (x86)\\ATI Technologies\\ATI.ACE\\Core-Static;C:\\Program Files (x86)\\Git\\cmd;C:\\Program Files (x86)\\Git\\bin;C:\\Program Files (x86)\\Heroku\\bin;C:\\Program Files (x86)\\git\\cmd;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\bin;C:\\Program Files (x86)\\ghc-7.8.2\\mingw\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin;C:\\Users\\magocoal\\AppData\\Roaming\\cabal\\bin")], programLocation = FoundOnSystem {locationPath = "C:\\Program Files (x86)\\Git\\bin\\tar.exe"}})], withPackageDB = [GlobalPackageDB,UserPackageDB], withVanillaLib = True, withProfLib = False, withSharedLib = False, withDynExe = False, withProfExe = False, withOptimization = NormalOptimisation, withGHCiLib = True, splitObjs = False, stripExes = True, progPrefix = "", progSuffix = ""}