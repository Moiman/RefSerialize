name: RefSerialize
version: 0.3.1.4
id: RefSerialize-0.3.1.4-gsqojE0gNjFc2gKqBc88i
key: 2Rmiqw95DirHmGaYJdH8t0
license: BSD3
maintainer: agocorona@gmail.com
synopsis: Write to and read from ByteStrings maintaining internal memory references
description:
    Read, Show and Binary instances do not check for internal data references to the same address.
    As a result, the data is duplicated when serialized. This is a waste of space in the filesystem
    and  also a waste of serialization time. but the worst consequence is that, when the serialized data is read,
    it allocates multiple copies for the same object when referenced multiple times. Because multiple referenced
    data is very typical in a pure language such is Haskell, this means that the resulting data loose the beatiful
    economy of space and processing time that referential transparency permits.
    .
    In this release:
    .
    Compatibility with older versions of bytestring that have no 'toStrict' call
    .
    deserialization is much, much faster by using the stringsearch package
    .
    See "Data.RefSerialize" for details
category: Parsing, Data, Database
author: Alberto GÃ³mez Corona
exposed: True
exposed-modules:
    Data.RefSerialize Data.RefSerialize.Parser
    Data.RefSerialize.Serialize
trusted: False
import-dirs: C:\Users\magocoal\OneDrive\Haskell\devel\RefSerialize\dist\build
library-dirs: C:\Users\magocoal\OneDrive\Haskell\devel\RefSerialize\dist\build
data-dir: C:\Users\magocoal\OneDrive\Haskell\devel\RefSerialize
hs-libraries: HSRefSerialize-0.3.1.4-gsqojE0gNjFc2gKqBc88i
depends:
    base-4.8.1.0-5e8cb96faebe2db97f24c6e11c6070d6
    binary-0.7.5.0-c947c700207cdcb14c8164744d2984af
    bytestring-0.10.6.0-e962539fa73878c53cfd606fc18d1ab5
    containers-0.5.6.2-e8a03fb45246a69f638da309f0336fa3
    hashtables-1.2.1.0-f3b53ba38b85e930ebb1b48e4344327d
    stringsearch-0.3.6.6-4e8163a143fb35fb32850f3be7ce6242
haddock-interfaces: C:\Users\magocoal\OneDrive\Haskell\devel\RefSerialize\dist\doc\html\RefSerialize\RefSerialize.haddock
haddock-html: C:\Users\magocoal\OneDrive\Haskell\devel\RefSerialize\dist\doc\html\RefSerialize
